{"version":3,"file":"yox.esm.js","sources":["../../../../../node_modules/yox-config/src/config.ts","../../../../../node_modules/yox-common/src/util/constant.ts","../../../../../node_modules/yox-common/src/util/is.ts","../../../../../node_modules/yox-common/src/function/execute.ts","../../../../../node_modules/yox-common/src/util/CustomEvent.ts","../../../../../node_modules/yox-common/src/util/array.ts","../../../../../node_modules/yox-common/src/util/string.ts","../../../../../node_modules/yox-common/src/util/keypath.ts","../../../../../node_modules/yox-common/src/util/holder.ts","../../../../../node_modules/yox-common/src/util/object.ts","../../../../../node_modules/yox-common/src/function/toString.ts","../../../../../node_modules/yox-common/src/util/logger.ts","../../../../../node_modules/yox-common/src/util/Emitter.ts","../../../../../node_modules/yox-common/src/function/isNative.ts","../../../../../node_modules/yox-common/src/function/nextTick.ts","../../../../../node_modules/yox-common/src/util/NextTask.ts","../../../../../node_modules/yox-snabbdom/src/field.ts","../../../../../node_modules/yox-snabbdom/src/nativeAttr.ts","../../../../../node_modules/yox-snabbdom/src/nativeProp.ts","../../../../../node_modules/yox-snabbdom/src/directive.ts","../../../../../node_modules/yox-snabbdom/src/component.ts","../../../../../node_modules/yox-snabbdom/src/snabbdom.ts","../../../../../node_modules/yox-common/src/function/toNumber.ts","../../../../../node_modules/yox-template-compiler/src/renderer.ts","../../../../../node_modules/yox-dom/src/dom.ts","../../../../../node_modules/yox-observer/src/Computed.ts","../../../../../node_modules/yox-observer/src/function/matchBest.ts","../../../../../node_modules/yox-observer/src/function/readValue.ts","../../../../../node_modules/yox-observer/src/function/diffString.ts","../../../../../node_modules/yox-observer/src/function/diffArray.ts","../../../../../node_modules/yox-observer/src/function/diffObject.ts","../../../../../node_modules/yox-observer/src/function/diffRecursion.ts","../../../../../node_modules/yox-observer/src/function/diffWatcher.ts","../../../../../node_modules/yox-observer/src/function/filterWatcher.ts","../../../../../node_modules/yox-observer/src/function/formatWatcherOptions.ts","../../../../../node_modules/yox-observer/src/Observer.ts","../../../../../node_modules/yox-common/src/function/debounce.ts","../../../src/directive/event.ts","../../../src/directive/model.ts","../../../src/directive/binding.ts","../../../src/Yox.ts"],"sourcesContent":["export const SYNTAX_IF = '#if'\nexport const SYNTAX_ELSE = 'else'\nexport const SYNTAX_ELSE_IF = 'else if'\nexport const SYNTAX_EACH = '#each'\nexport const SYNTAX_PARTIAL = '#partial'\nexport const SYNTAX_IMPORT = '>'\nexport const SYNTAX_SPREAD = '...'\nexport const SYNTAX_COMMENT = /^!\\s/\n\nexport const SLOT_DATA_PREFIX = '$slot_'\nexport const SLOT_NAME_DEFAULT = 'children'\n\nexport const HINT_STRING = 1\nexport const HINT_NUMBER = 2\nexport const HINT_BOOLEAN = 3\n\nexport const DIRECTIVE_ON = 'on'\nexport const DIRECTIVE_LAZY = 'lazy'\nexport const DIRECTIVE_MODEL = 'model'\nexport const DIRECTIVE_EVENT = 'event'\nexport const DIRECTIVE_BINDING = 'binding'\nexport const DIRECTIVE_CUSTOM = 'o'\n\nexport const MODIFER_NATIVE = 'native'\n\nexport const MODEL_PROP_DEFAULT = 'value'\n\nexport const NAMESPACE_HOOK = '.hook'\n\nexport const HOOK_BEFORE_CREATE = 'beforeCreate'\nexport const HOOK_AFTER_CREATE = 'afterCreate'\nexport const HOOK_BEFORE_MOUNT = 'beforeMount'\nexport const HOOK_AFTER_MOUNT = 'afterMount'\nexport const HOOK_BEFORE_UPDATE = 'beforeUpdate'\nexport const HOOK_AFTER_UPDATE = 'afterUpdate'\nexport const HOOK_BEFORE_DESTROY = 'beforeDestroy'\nexport const HOOK_AFTER_DESTROY = 'afterDestroy'\n\nexport const HOOK_BEFORE_PROPS_UPDATE = 'beforePropsUpdate'\n","/**\n * 为了压缩，定义的常量\n */\nexport const TRUE = true\nexport const FALSE = false\nexport const NULL = null\nexport const UNDEFINED = void 0\nexport const MINUS_ONE = -1\n\nexport const RAW_TRUE = 'true'\nexport const RAW_FALSE = 'false'\nexport const RAW_NULL = 'null'\nexport const RAW_UNDEFINED = 'undefined'\n\nexport const RAW_KEY = 'key'\nexport const RAW_REF = 'ref'\nexport const RAW_SLOT = 'slot'\nexport const RAW_NAME = 'name'\n\nexport const RAW_FILTER = 'filter'\nexport const RAW_PARTIAL = 'partial'\nexport const RAW_COMPONENT = 'component'\nexport const RAW_DIRECTIVE = 'directive'\nexport const RAW_TRANSITION = 'transition'\n\nexport const RAW_THIS = 'this'\nexport const RAW_VALUE = 'value'\nexport const RAW_LENGTH = 'length'\nexport const RAW_FUNCTION = 'function'\nexport const RAW_TEMPLATE = 'template'\nexport const RAW_WILDCARD = '*'\nexport const RAW_DOT = '.'\nexport const RAW_SLASH = '/'\n\nexport const KEYPATH_PARENT = '..'\nexport const KEYPATH_CURRENT = RAW_THIS\n\n/**\n * Single instance for window in browser\n */\nexport const WINDOW = typeof window !== RAW_UNDEFINED ? window : UNDEFINED\n\n/**\n * Single instance for document in browser\n */\nexport const DOCUMENT = typeof document !== RAW_UNDEFINED ? document : UNDEFINED\n\n/**\n * Single instance for global in nodejs or browser\n */\nexport const GLOBAL = typeof global !== RAW_UNDEFINED ? global : WINDOW\n\n/**\n * tap 事件\n *\n * 非常有用的抽象事件，比如 pc 端是 click 事件，移动端是 touchend 事件\n *\n * 这样只需 on-tap=\"handler\" 就可以完美兼容各端\n *\n * 框架未实现此事件，通过 Yox.dom.addSpecialEvent 提供给外部扩展\n *\n */\nexport const EVENT_TAP = 'tap'\n\n/**\n * 点击事件\n */\nexport const EVENT_CLICK = 'click'\n\n/**\n * 输入事件\n */\nexport const EVENT_INPUT = 'input'\n\n/**\n * 变化事件\n */\nexport const EVENT_CHANGE = 'change'\n\n/**\n * 唯一内置的特殊事件：model\n */\nexport const EVENT_MODEL = 'model'\n\n/**\n * Single instance for noop function\n */\nexport const EMPTY_FUNCTION = function () {\n  /** yox */\n}\n\n/**\n * 空对象，很多地方会用到，比如 `a || EMPTY_OBJECT` 确保是个对象\n */\nexport const EMPTY_OBJECT = Object.freeze({})\n\n/**\n * 空数组\n */\nexport const EMPTY_ARRAY = Object.freeze([])\n\n/**\n * 空字符串\n */\nexport const EMPTY_STRING = ''\n","import * as constant from './constant'\n\n/**\n * Check if value is a function.\n *\n * @param value\n * @return\n */\nexport function func(value: any): boolean {\n  return typeof value === constant.RAW_FUNCTION\n}\n\n/**\n * Check if value is an array.\n *\n * @param value\n * @return\n */\nexport function array(value: any): boolean {\n  return Array.isArray(value)\n}\n\n/**\n * Check if value is an object.\n *\n * @param value\n * @return\n */\nexport function object(value: any): boolean {\n  // 低版本 IE 会把 null 当作 object\n  return value !== constant.NULL && typeof value === 'object'\n}\n\n/**\n * Check if value is a string.\n *\n * @param value\n * @return\n */\nexport function string(value: any): boolean {\n  return typeof value === 'string'\n}\n\n/**\n * Check if value is a number.\n *\n * @param value\n * @return\n */\nexport function number(value: any): boolean {\n  return typeof value === 'number' && !isNaN(value)\n}\n\n/**\n * Check if value is boolean.\n *\n * @param value\n * @return\n */\nexport function boolean(value: any): boolean {\n  return typeof value === 'boolean'\n}\n\n/**\n * Check if value is numeric.\n *\n * @param value\n * @return\n */\nexport function numeric(value: any): boolean {\n  return number(value)\n    || (string(value) && !isNaN(parseFloat(value)) && isFinite(value))\n}\n","import * as is from '../util/is'\nimport * as constant from '../util/constant'\n\n/**\n * 任性地执行一个函数，不管它有没有、是不是\n *\n * @param fn 调用的函数\n * @param context 执行函数时的 this 指向\n * @param args 调用函数的参数，多参数时传入数组\n * @return 调用函数的返回值\n */\nexport default function (fn: any, context?: any, args?: any): any {\n  if (is.func(fn)) {\n    return is.array(args)\n      ? fn.apply(context, args)\n      : context !== constant.UNDEFINED\n        ? fn.call(context, args)\n        : args !== constant.UNDEFINED\n          ? fn(args)\n          : fn()\n  }\n}\n","import {\n  YoxInterface,\n  CustomEventInterface,\n} from 'yox-type/src/yox'\n\nimport * as constant from './constant'\n\nexport default class CustomEvent implements CustomEventInterface {\n\n  public static PHASE_CURRENT = 0\n\n  public static PHASE_UPWARD = 1\n\n  public static PHASE_DOWNWARD = constant.MINUS_ONE\n\n  // 事件名称\n  type: string\n\n  // 事件当前阶段\n  phase: number\n\n  // 事件命名空间\n  ns?: string\n\n  // 哪个组件发出的事件\n  target?: YoxInterface\n\n  // 原始事件，比如 DOM 事件\n  originalEvent?: CustomEventInterface | Event\n\n  // 是否已阻止事件的默认行为\n  isPrevented?: true\n\n  // 是否已停止事件冒泡\n  isStoped?: true\n\n  // 处理当前事件的监听器，方便外部获取 listener 进行解绑\n  listener?: Function\n\n  /**\n   * 构造函数\n   *\n   * 可以传事件名称，也可以传原生事件对象\n   */\n  constructor(type: string, originalEvent?: CustomEventInterface | Event) {\n    // 这里不设置命名空间\n    // 因为有没有命名空间取决于 Emitter 的构造函数有没有传 true\n    // CustomEvent 自己无法决定\n    this.type = type\n    this.phase = CustomEvent.PHASE_CURRENT\n    if (originalEvent) {\n      this.originalEvent = originalEvent\n    }\n  }\n\n  /**\n   * 阻止事件的默认行为\n   */\n  preventDefault(): this {\n    const instance = this\n    if (!instance.isPrevented) {\n      const { originalEvent } = instance\n      if (originalEvent) {\n        originalEvent.preventDefault()\n      }\n      instance.isPrevented = constant.TRUE\n    }\n    return instance\n  }\n\n  /**\n   * 停止事件广播\n   */\n  stopPropagation(): this {\n    const instance = this\n    if (!instance.isStoped) {\n      const { originalEvent } = instance\n      if (originalEvent) {\n        originalEvent.stopPropagation()\n      }\n      instance.isStoped = constant.TRUE\n    }\n    return instance\n  }\n\n  prevent(): this {\n    return this.preventDefault()\n  }\n\n  stop(): this {\n    return this.stopPropagation()\n  }\n\n}","import * as is from './is'\nimport * as constant from './constant'\n\nimport execute from '../function/execute'\n\n/**\n * 遍历数组\n *\n * @param array\n * @param callback 返回 false 可停止遍历\n * @param reversed 是否逆序遍历\n */\nexport function each<T>(\n  array: T[],\n  callback: (item: T, index: number) => boolean | void,\n  reversed?: boolean\n): void {\n  const { length } = array\n  if (length) {\n    if (reversed) {\n      for (let i = length - 1; i >= 0; i--) {\n        if (callback(array[i], i) === constant.FALSE) {\n          break\n        }\n      }\n    }\n    else {\n      for (let i = 0; i < length; i++) {\n        if (callback(array[i], i) === constant.FALSE) {\n          break\n        }\n      }\n    }\n  }\n}\n\nfunction nativePush<T>(array: T[], item: T) {\n  array[array.length] = item\n}\n\nfunction nativeUnshift<T>(array: T[], item: T) {\n  array.unshift(item)\n}\n\n/**\n * 添加\n *\n * @param array\n * @param value\n * @param action\n */\nfunction addItem<T>(array: T[], value: T | T[], action: Function) {\n  if (is.array(value)) {\n    each(\n      value as T[],\n      function (item: T) {\n        action(array, item)\n      }\n    )\n  }\n  else {\n    action(array, value)\n  }\n}\n\n/**\n * 往后加\n *\n * @param array\n * @param target\n */\nexport function push<T>(array: T[], target: T | T[]): void {\n  addItem(array, target, nativePush)\n}\n\n/**\n * 往前加\n *\n * @param array\n * @param target\n */\nexport function unshift<T>(array: T[], target: T | T[]): void {\n  addItem(array, target, nativeUnshift)\n}\n\n/**\n * 数组项在数组中的位置\n *\n * @param array 数组\n * @param target 数组项\n * @param strict 是否全等判断，默认是全等\n * @return 如果未找到，返回 -1\n */\nexport function indexOf<T>(array: T[], target: T, strict?: boolean): number {\n  let result = constant.MINUS_ONE\n  each(\n    array,\n    function (item: any, index: number) {\n      if (strict === constant.FALSE ? item == target : item === target) {\n        result = index\n        return constant.FALSE\n      }\n    }\n  )\n  return result\n}\n\n/**\n * 获取数组最后一项\n *\n * @param array 数组\n * @return\n */\nexport function last<T>(array: T[]): T | void {\n  const { length } = array\n  if (length > 0) {\n    return array[length - 1]\n  }\n}\n\n/**\n * 弹出数组最后一项\n *\n * 项目里用的太多，仅用于节省字符...\n *\n * @param array 数组\n * @return 弹出的数组项\n */\nexport function pop<T>(array: T[]): T | void {\n  const { length } = array\n  if (length > 0) {\n    return array.pop()\n  }\n}\n\n/**\n * 删除数组项\n *\n * @param array 数组\n * @param item 待删除项\n * @param strict 是否全等判断，默认是全等\n * @return 删除的数量\n */\nexport function remove<T>(array: T[], target: T, strict?: boolean): number {\n  let result = 0\n  each(\n    array,\n    function (item: T, index: number) {\n      if (strict === constant.FALSE ? item == target : item === target) {\n        array.splice(index, 1)\n        result++\n      }\n    },\n    constant.TRUE\n  )\n  return result\n}\n\n/**\n * 数组是否包含 item\n *\n * @param array 数组\n * @param target 可能包含的数组项\n * @param strict 是否全等判断，默认是全等\n * @return\n */\nexport function has<T>(array: T[], target: T, strict?: boolean): boolean {\n  return indexOf(array, target, strict) >= 0\n}\n\n/**\n * 把类数组转成数组\n *\n * @param array 类数组\n * @return\n */\nexport function toArray<T>(array: T[] | ArrayLike<T>): T[] {\n  return is.array(array)\n    ? array\n    : execute(constant.EMPTY_ARRAY.slice, array)\n}\n\n/**\n * 把数组转成对象\n *\n * @param array 数组\n * @param key 数组项包含的字段名称，如果数组项是基本类型，可不传\n * @param value\n * @return\n */\nexport function toObject(array: any[], key?: string | null, value?: any): object {\n  let result = {}\n  each(\n    array,\n    function (item: any) {\n      result[key ? item[key] : item] = value || item\n    }\n  )\n  return result\n}\n\n/**\n * 把数组合并成字符串\n *\n * @param array\n * @param separator\n * @return\n */\nexport function join(array: string[], separator: string): string {\n  return array.join(separator)\n}\n\n/**\n * 用于判断长度大于 0 的数组\n *\n * @param array\n * @return\n */\nexport function falsy(array: any): boolean {\n  return !is.array(array) || !array.length\n}\n","import * as is from './is'\nimport * as constant from './constant'\n\nconst camelizePattern = /-([a-z])/gi,\n\nhyphenatePattern = /\\B([A-Z])/g,\n\ncapitalizePattern = /^[a-z]/,\n\ncamelizeCache: Record<string, string> = {},\n\nhyphenateCache: Record<string, string> = {},\n\ncapitalizeCache: Record<string, string> = {}\n\n/**\n * 连字符转成驼峰\n *\n * @param str\n * @return 驼峰格式的字符串\n */\nexport function camelize(str: string): string {\n  if (!camelizeCache[str]) {\n    camelizeCache[str] = str.replace(\n      camelizePattern,\n      function ($0, $1) {\n        return upper($1)\n      }\n    )\n  }\n  return camelizeCache[str]\n}\n\n/**\n * 驼峰转成连字符\n *\n * @param str\n * @return 连字符格式的字符串\n */\nexport function hyphenate(str: string): string {\n  if (!hyphenateCache[str]) {\n    hyphenateCache[str] = str.replace(\n      hyphenatePattern,\n      function ($0, $1) {\n        return '-' + lower($1)\n      }\n    )\n  }\n  return hyphenateCache[str]\n}\n\n/**\n * 首字母大写\n *\n * @param str\n * @return\n */\nexport function capitalize(str: string): string {\n  if (!capitalizeCache[str]) {\n    capitalizeCache[str] = str.replace(\n      capitalizePattern,\n      upper\n    )\n  }\n  return capitalizeCache[str]\n}\n\n/**\n * 清除两侧空白符\n *\n * @param str\n * @return 清除两侧空白符的字符串\n */\nexport function trim(str: any): string {\n  return falsy(str)\n    ? constant.EMPTY_STRING\n    : str.trim()\n}\n\n/**\n * 截取字符串\n *\n * @param str\n * @param start\n * @param end\n * @return\n */\nexport function slice(str: string, start: number, end?: number): string {\n  return is.number(end)\n    ? start === end\n      ? constant.EMPTY_STRING\n      : str.slice(start, end)\n    : str.slice(start)\n}\n\n/**\n * 获取子串的起始位置\n *\n * @param str\n * @param part\n * @param start\n * @return\n */\nexport function indexOf(str: string, part: string, start?: number): number {\n  return str.indexOf(part, start !== constant.UNDEFINED ? start : 0)\n}\n\n/**\n * 获取子串的起始位置\n *\n * @param str\n * @param part\n * @param end\n * @return\n */\nexport function lastIndexOf(str: string, part: string, end?: number): number {\n  return str.lastIndexOf(part, end !== constant.UNDEFINED ? end : str.length)\n}\n\n/**\n * str 是否以 part 开头\n *\n * @param str\n * @param part\n * @return\n */\nexport function startsWith(str: string, part: string): boolean {\n  return indexOf(str, part) === 0\n}\n\n/**\n * str 是否以 part 结束\n *\n * @param str\n * @param part\n * @return\n */\nexport function endsWith(str: string, part: string): boolean {\n  const offset = str.length - part.length\n  return offset >= 0 && lastIndexOf(str, part) === offset\n}\n\n/**\n * 获取某个位置的字符\n */\nexport function charAt(str: string, index?: number): string {\n  return str.charAt(index || 0)\n}\n\n/**\n * 获取某个位置的字符编码\n */\nexport function codeAt(str: string, index?: number): number {\n  return str.charCodeAt(index || 0)\n}\n\n/**\n * 大写格式\n */\nexport function upper(str: string): string {\n  return str.toUpperCase()\n}\n\n/**\n * 小写格式\n */\nexport function lower(str: string): string {\n  return str.toLowerCase()\n}\n\n/**\n * str 是否包含 part\n *\n * @param str\n * @param part\n * @return 是否包含\n */\nexport function has(str: string, part: string): boolean {\n  return indexOf(str, part) >= 0\n}\n\n/**\n * 判断长度大于 0 的字符串\n *\n * @param str\n * @return\n */\nexport function falsy(str: any): boolean {\n  return !is.string(str) || !str.length\n}\n","import * as string from './string'\nimport * as constant from './constant'\n\nconst dotPattern = /\\./g,\n\nasteriskPattern = /\\*/g,\n\ndoubleAsteriskPattern = /\\*\\*/g,\n\nsplitCache: Record<string, string[]> = {},\n\npatternCache: Record<string, RegExp> = {}\n\n/**\n * 判断 keypath 是否以 prefix 开头，如果是，返回匹配上的前缀长度，否则返回 -1\n *\n * @param keypath\n * @param prefix\n * @return\n */\nexport function match(keypath: string, prefix: string): number {\n  if (keypath === prefix) {\n    return prefix.length\n  }\n  prefix += constant.RAW_DOT\n  return string.startsWith(keypath, prefix)\n    ? prefix.length\n    : constant.MINUS_ONE\n}\n\n/**\n * 遍历 keypath 的每个部分\n *\n * @param keypath\n * @param callback 返回 false 可中断遍历\n */\nexport function each(keypath: string, callback: (key: string, isLast: boolean) => boolean | void) {\n  // 如果 keypath 是 toString 之类的原型字段\n  // splitCache[keypath] 会取到原型链上的对象\n  const list = splitCache.hasOwnProperty(keypath)\n    ? splitCache[keypath]\n    : (splitCache[keypath] = keypath.split(constant.RAW_DOT))\n\n  for (let i = 0, lastIndex = list.length - 1; i <= lastIndex; i++) {\n    if (callback(list[i], i === lastIndex) === constant.FALSE) {\n      break\n    }\n  }\n}\n\n/**\n * 遍历 keypath 的每个部分\n *\n * @param keypath1\n * @param keypath2\n */\nexport function join(keypath1: string, keypath2: string): string {\n  return keypath1 && keypath2\n    ? keypath1 + constant.RAW_DOT + keypath2\n    : keypath1 || keypath2\n}\n\n/**\n * 是否模糊匹配\n *\n * @param keypath\n */\nexport function isFuzzy(keypath: string): boolean {\n  return string.has(keypath, constant.RAW_WILDCARD)\n}\n\n/**\n * 模糊匹配 keypath\n *\n * @param keypath\n * @param pattern\n */\nexport function matchFuzzy(keypath: string, pattern: string): string | void {\n  let cache = patternCache[pattern]\n  if (!cache) {\n    const str = pattern\n      .replace(dotPattern, '\\\\.')\n      .replace(asteriskPattern, '(\\\\w+)')\n      .replace(doubleAsteriskPattern, '([\\.\\\\w]+?)')\n    cache = patternCache[pattern] = new RegExp(`^${str}$`)\n  }\n  const result = keypath.match(cache)\n  if (result) {\n    return result[1]\n  }\n}","import {\n  ValueHolder,\n} from 'yox-type/src/type'\n\nimport * as constant from './constant'\n\n/**\n * 全局 value holder，避免频繁的创建临时对象\n */\nconst holder: ValueHolder = {\n  value: constant.UNDEFINED\n}\n\nexport default holder","import {\n  Data,\n  ValueHolder,\n} from 'yox-type/src/type'\n\nimport * as is from './is'\nimport * as array from './array'\nimport * as constant from './constant'\nimport * as keypathUtil from './keypath'\n\nimport holder from './holder'\n\n/**\n * 获取对象的 key 的数组\n *\n * @param object\n * @return\n */\nexport function keys(object: Data): string[] {\n  return Object.keys(object)\n}\n\nfunction sortKeyByAsc(a: string, b: string): number {\n  return a.length - b.length\n}\n\nfunction sortKeyByDesc(a: string, b: string): number {\n  return b.length - a.length\n}\n\n/**\n * 排序对象的 key\n *\n * @param object\n * @param desc 是否逆序，默认从小到大排序\n * @return\n */\nexport function sort(object: Data, desc?: boolean): string[] {\n  return keys(object).sort(\n    desc ? sortKeyByDesc : sortKeyByAsc\n  )\n}\n\n/**\n * 遍历对象\n *\n * @param object\n * @param callback 返回 false 可停止遍历\n */\nexport function each(object: Data, callback: (value: any, key: string) => boolean | void): void {\n  for (let key in object) {\n    if (callback(object[key], key) === constant.FALSE) {\n      break\n    }\n  }\n}\n\n/**\n * 清空对象所有的键值对\n *\n * @param object\n */\nexport function clear(object: Data): void {\n  each(\n    object,\n    function (_, key) {\n      delete object[key]\n    }\n  )\n}\n\n/**\n * 扩展对象\n *\n * @return\n */\nexport function extend(original: Data, object: Data): Data {\n  each(\n    object,\n    function (value, key) {\n      original[key] = value\n    }\n  )\n  return original\n}\n\n/**\n * 合并对象\n *\n * @return\n */\nexport function merge(object1: Data | void, object2: Data | void): Data | void {\n  return object1 && object2\n    ? extend(extend({}, object1), object2)\n    : object1 || object2\n}\n\n/**\n * 拷贝对象\n *\n * @param object\n * @param deep 是否需要深拷贝\n * @return\n */\nexport function copy(object: any, deep?: boolean): any {\n  let result = object\n  if (is.array(object)) {\n    if (deep) {\n      result = []\n      array.each(\n        object,\n        function (item, index) {\n          result[index] = copy(item, deep)\n        }\n      )\n    }\n    else {\n      result = object.slice()\n    }\n  }\n  else if (is.object(object)) {\n    result = {}\n    each(\n      object,\n      function (value, key) {\n        result[key] = deep ? copy(value, deep) : value\n      }\n    )\n  }\n  return result\n}\n\n/**\n * 从对象中查找一个 keypath\n *\n * 返回值是空时，表示没找到值\n *\n * @param object\n * @param keypath\n * @return\n */\nexport function get(object: any, keypath: string): ValueHolder | undefined {\n\n  keypathUtil.each(\n    keypath,\n    function (key, isLast) {\n\n      if (object != constant.NULL) {\n\n        // 先直接取值\n        let value = object[key],\n\n        // 紧接着判断值是否存在\n        // 下面会处理计算属性的值，不能在它后面设置 hasValue\n        hasValue = value !== constant.UNDEFINED\n\n        // 如果是计算属性，取计算属性的值\n        if (value && is.func(value.get)) {\n          value = value.get()\n        }\n\n        if (isLast) {\n          if (hasValue) {\n            holder.value = value\n            object = holder\n          }\n          else {\n            object = constant.UNDEFINED\n          }\n        }\n        else {\n          object = value\n        }\n      }\n      else {\n        object = constant.UNDEFINED\n        return constant.FALSE\n      }\n\n    }\n  )\n\n  return object\n\n}\n\n/**\n * 为对象设置一个键值对\n *\n * @param object\n * @param keypath\n * @param value\n * @param autofill 是否自动填充不存在的对象，默认自动填充\n */\nexport function set(object: Data, keypath: string, value: any, autofill?: boolean): void {\n  keypathUtil.each(\n    keypath,\n    function (key, isLast) {\n      if (isLast) {\n        object[key] = value\n      }\n      else if (object[key]) {\n        object = object[key]\n      }\n      else if (autofill) {\n        object = object[key] = {}\n      }\n      else {\n        return constant.FALSE\n      }\n    }\n  )\n}\n\n/**\n * 对象是否包含某个 key\n *\n * @param object\n * @param key\n * @return\n */\nexport function has(object: Data, key: string | number): boolean {\n  // 不用 hasOwnProperty，性能差\n  return object[key] !== constant.UNDEFINED\n}\n\n/**\n * 是否是空对象\n *\n * @param object\n * @return\n */\nexport function falsy(object: any): boolean {\n  return !is.object(object)\n    || is.array(object)\n    || !keys(object).length\n}","import * as constant from '../util/constant'\n\nexport default function (target: any, defaultValue?: string): string {\n  return target != constant.NULL && target.toString\n    ? target.toString()\n    : defaultValue !== constant.UNDEFINED\n      ? defaultValue as string\n      : constant.EMPTY_STRING\n}\n","import * as constant from './constant'\nimport toString from '../function/toString'\n\nexport const DEBUG = 1\nexport const INFO = 2\nexport const WARN = 3\nexport const ERROR = 4\nexport const FATAL = 5\n\n/**\n * 是否有原生的日志特性，没有必要单独实现\n */\nconst nativeConsole: Console | null = typeof console !== constant.RAW_UNDEFINED ? console : constant.NULL,\n\n/**\n * 当前是否是源码调试，如果开启了代码压缩，empty function 里的注释会被干掉\n * 源码模式默认选 INFO，因为 DEBUG 输出的日志太多，会导致性能急剧下降\n */\ndefaultLogLevel = /yox/.test(toString(constant.EMPTY_FUNCTION)) ? INFO : WARN,\n\n/**\n * console 样式前缀\n * ie 和 edge 不支持 console.log 样式\n */\nstylePrefix = constant.WINDOW && /edge|msie|trident/i.test(constant.WINDOW.navigator.userAgent)\n  ? constant.EMPTY_STRING\n  : '%c',\n\n/**\n * 日志打印函数\n */\nprintLog = nativeConsole\n  ? stylePrefix\n    ? function (tag: string, msg: string, style: string) {\n      nativeConsole.log(stylePrefix + tag, style, msg)\n    }\n    : function (tag: string, msg: string) {\n      nativeConsole.log(tag, msg)\n    }\n  : constant.EMPTY_FUNCTION\n\n/**\n * 全局调试开关\n */\nfunction getLogLevel() {\n  if (constant.GLOBAL) {\n    const logLevel = constant.GLOBAL['YOX_LOG_LEVEL']\n    if (logLevel >= DEBUG && logLevel <= FATAL) {\n      return logLevel as number\n    }\n  }\n  return defaultLogLevel\n}\n\nfunction getStyle(backgroundColor: string) {\n  return `background-color:${backgroundColor};border-radius:12px;color:#fff;font-size:10px;padding:3px 6px;`\n}\n\n/**\n * 打印 debug 日志\n *\n * @param msg\n */\nexport function debug(msg: string, tag?: string): void {\n  if (getLogLevel() <= DEBUG) {\n    printLog(tag || 'Yox debug', msg, getStyle('#999'))\n  }\n}\n\n/**\n * 打印 info 日志\n *\n * @param msg\n */\nexport function info(msg: string, tag?: string): void {\n  if (getLogLevel() <= INFO) {\n    printLog(tag || 'Yox info', msg, getStyle('#2db7f5'))\n  }\n}\n\n/**\n * 打印 warn 日志\n *\n * @param msg\n */\nexport function warn(msg: string, tag?: string): void {\n  if (getLogLevel() <= WARN) {\n    printLog(tag || 'Yox warn', msg, getStyle('#f90'))\n  }\n}\n\n/**\n * 打印 error 日志\n *\n * @param msg\n */\nexport function error(msg: string, tag?: string): void {\n  if (getLogLevel() <= ERROR) {\n    printLog(tag || 'Yox error', msg, getStyle('#ed4014'))\n  }\n}\n\n/**\n * 致命错误，中断程序\n *\n * @param msg\n */\nexport function fatal(msg: string, tag?: string): void {\n  if (getLogLevel() <= FATAL) {\n    throw new Error(`[${tag || 'Yox fatal'}]: ${msg}`)\n  }\n}\n","import {\n  NativeListener,\n} from 'yox-type/src/type'\n\nimport {\n  EmitterOptions,\n} from 'yox-type/src/options'\n\nimport execute from '../function/execute'\n\nimport CustomEvent from './CustomEvent'\n\nimport * as is from './is'\nimport * as array from './array'\nimport * as object from './object'\nimport * as string from './string'\nimport * as logger from './logger'\nimport * as constant from './constant'\n\ntype Namespace = {\n\n  // 事件名称\n  type: string\n\n  // 命名空间\n  ns?: string\n\n}\n\nexport default class Emitter {\n\n  /**\n   * 是否开启命名空间\n   */\n  ns: boolean\n\n  /**\n   * 已注册的事件监听\n   */\n  listeners: Record<string, EmitterOptions[]>\n\n  /**\n   * 原生事件监听，一个事件对应一个 listener\n   */\n  nativeListeners?: Record<string, NativeListener>\n\n  constructor(ns?: boolean) {\n    this.ns = ns || constant.FALSE\n    this.listeners = {}\n  }\n\n  /**\n   * 发射事件\n   *\n   * @param type 事件名称或命名空间\n   * @param args 事件处理函数的参数列表\n   * @param filter 自定义过滤器\n   */\n  fire(\n    type: string | Namespace,\n    args: any[] | void,\n    filter?: (\n      namespace: Namespace,\n      args: any[] | void,\n      options: EmitterOptions\n    ) => boolean | void\n  ): boolean {\n\n    let instance = this,\n\n    namespace = is.string(type) ? instance.parse(type as string) : type as Namespace,\n\n    list = instance.listeners[namespace.type],\n\n    isComplete = constant.TRUE\n\n    if (list) {\n\n      // 避免遍历过程中，数组发生变化，比如增删了\n      list = object.copy(list)\n\n      // 判断是否是发射事件\n      // 如果 args 的第一个参数是 CustomEvent 类型，表示发射事件\n      // 因为事件处理函数的参数列表是 (event, data)\n      const event = args && args[0] instanceof CustomEvent\n        ? args[0] as CustomEvent\n        : constant.UNDEFINED\n\n      array.each(\n        list,\n        function (options) {\n\n          // 命名空间不匹配\n          if (!matchNamespace(namespace.ns, options)\n            // 在 fire 过程中被移除了\n            || !array.has(list, options)\n            // 传了 filter，则用 filter 判断是否过滤此 options\n            || (filter && !filter(namespace, args, options))\n          ) {\n            return\n          }\n\n          // 为 event 对象加上当前正在处理的 listener\n          // 这样方便业务层移除事件绑定\n          // 比如 on('xx', function) 这样定义了匿名 listener\n          // 在这个 listener 里面获取不到当前 listener 的引用\n          // 为了能引用到，有时候会先定义 var listener = function\n          // 然后再 on('xx', listener) 这样其实是没有必要的\n          if (event) {\n            event.listener = options.fn\n          }\n\n          let result = execute(options.fn, options.ctx, args)\n\n          if (event) {\n            event.listener = constant.UNDEFINED\n          }\n\n          // 执行次数\n          options.num = options.num ? (options.num + 1) : 1\n\n          // 注册的 listener 可以指定最大执行次数\n          if (options.num === options.max) {\n            instance.off(namespace, options.fn)\n          }\n\n          // 如果没有返回 false，而是调用了 event.stop 也算是返回 false\n          if (event) {\n            if (result === constant.FALSE) {\n              event.prevent().stop()\n            }\n            else if (event.isStoped) {\n              result = constant.FALSE\n            }\n          }\n\n          if (result === constant.FALSE) {\n            return isComplete = constant.FALSE\n          }\n        }\n      )\n\n    }\n\n    return isComplete\n\n  }\n\n  /**\n   * 注册监听\n   *\n   * @param type\n   * @param listener\n   */\n  on(\n    type: string | Namespace,\n    listener: Function | EmitterOptions\n  ): void {\n\n    const instance = this,\n\n    listeners = instance.listeners,\n\n    options: EmitterOptions = is.func(listener)\n      ? { fn: listener as Function }\n      : listener as EmitterOptions\n\n    if (is.object(options) && is.func(options.fn)) {\n      const namespace = is.string(type) ? instance.parse(type as string) : type as Namespace\n      options.ns = namespace.ns\n      array.push(\n        listeners[namespace.type] || (listeners[namespace.type] = []),\n        options\n      )\n    }\n    else if (process.env.NODE_ENV === 'development') {\n      logger.fatal(`emitter.on(type, listener) invoke failed：\\n\\n\"listener\" is expected to be a Function or an EmitterOptions.\\n`)\n    }\n\n  }\n\n  /**\n   * 取消监听\n   *\n   * @param type\n   * @param listener\n   */\n  off(\n    type?: string | Namespace,\n    listener?: Function\n  ): void {\n\n    const instance = this,\n\n    listeners = instance.listeners\n\n    if (type) {\n\n      const namespace = is.string(type) ? instance.parse(type as string) : type as Namespace,\n\n      name = namespace.type,\n\n      ns = namespace.ns,\n\n      matchListener = createMatchListener(listener),\n\n      each = function (list: EmitterOptions[], name: string) {\n        array.each(\n          list,\n          function (options, index) {\n            if (matchListener(options) && matchNamespace(ns, options)) {\n              list.splice(index, 1)\n            }\n          },\n          constant.TRUE\n        )\n        if (!list.length) {\n          delete listeners[name]\n        }\n      }\n\n      if (name) {\n        if (listeners[name]) {\n          each(listeners[name], name)\n        }\n      }\n      else if (ns) {\n        object.each(listeners, each)\n      }\n\n      // 在开发阶段进行警告，比如传了 listener 进来，listener 是个空值\n      // 但你不知道它是空值\n      if (process.env.NODE_ENV === 'development') {\n        if (arguments.length > 1 && listener == constant.NULL) {\n          logger.warn(`emitter.off(type, listener) is invoked, but \"listener\" is ${listener}.`)\n        }\n      }\n\n    }\n    else {\n      // 清空\n      instance.listeners = {}\n      // 在开发阶段进行警告，比如传了 type 进来，type 是个空值\n      // 但你不知道它是空值\n      if (process.env.NODE_ENV === 'development') {\n        if (arguments.length > 0) {\n          logger.warn(`emitter.off(type) is invoked, but \"type\" is ${type}.`)\n        }\n      }\n    }\n\n  }\n\n  /**\n   * 是否已监听某个事件\n   *\n   * @param type\n   * @param listener\n   */\n  has(\n    type: string | Namespace,\n    listener?: Function\n  ): boolean {\n\n    let instance = this,\n\n    listeners = instance.listeners,\n\n    namespace = is.string(type) ? instance.parse(type as string) : type as Namespace,\n\n    name = namespace.type,\n\n    ns = namespace.ns,\n\n    result = constant.TRUE,\n\n    matchListener = createMatchListener(listener),\n\n    each = function (list: EmitterOptions[]) {\n      array.each(\n        list,\n        function (options) {\n          if (matchListener(options) && matchNamespace(ns, options)) {\n            return result = constant.FALSE\n          }\n        }\n      )\n      return result\n    }\n\n    if (name) {\n      if (listeners[name]) {\n        each(listeners[name])\n      }\n    }\n    else if (ns) {\n      object.each(listeners, each)\n    }\n\n    return !result\n\n  }\n\n  /**\n   * 把事件类型解析成命名空间格式\n   *\n   * @param type\n   */\n  parse(type: string): Namespace {\n\n    // 这里 ns 必须为字符串\n    // 用于区分 event 对象是否已完成命名空间的解析\n    const result = {\n      type,\n      ns: constant.EMPTY_STRING,\n    }\n\n    // 是否开启命名空间\n    if (this.ns) {\n      const index = string.indexOf(type, constant.RAW_DOT)\n      if (index >= 0) {\n        result.type = string.slice(type, 0, index)\n        result.ns = string.slice(type, index + 1)\n      }\n    }\n\n    return result\n\n  }\n\n}\n\nfunction matchTrue() {\n  return constant.TRUE\n}\n\n/**\n * 外部会传入 Function 或 EmitterOptions 或 空\n *\n * 这里根据传入值的不同类型，创建不同的判断函数\n *\n * 如果传入的是 EmitterOptions，则全等判断\n *\n * 如果传入的是 Function，则判断函数是否全等\n *\n * 如果传入的是空，则直接返回 true\n *\n * @param listener\n */\nfunction createMatchListener(listener: Function | void): (options: EmitterOptions) => boolean {\n  return is.func(listener)\n      ? function (options: EmitterOptions) {\n          return listener === options.fn\n        }\n      : matchTrue\n}\n\n/**\n * 判断 options 是否能匹配命名空间\n *\n * 如果 namespace 和 options.ns 都不为空，则需完全匹配\n *\n * 如果他们两个其中任何一个为空，则不判断命名空间\n *\n * @param namespace\n * @param options\n */\nfunction matchNamespace(namespace: string | void, options: EmitterOptions): boolean {\n  const { ns } = options\n  return ns && namespace\n    ? ns === namespace\n    : constant.TRUE\n}","import * as is from '../util/is'\nimport * as string from '../util/string'\nimport toString from './toString'\n\nexport default function (target: any): boolean {\n  return is.func(target)\n    && string.has(toString(target), '[native code]')\n}","import * as constant from '../util/constant'\nimport isNative from './isNative'\n\ndeclare const setImmediate: Function\n\nlet nextTick: Function\n\n// IE (10+) 和 node\nif (typeof setImmediate === constant.RAW_FUNCTION && isNative(setImmediate)) {\n  nextTick = setImmediate\n}\n// 用 MessageChannel 去做 setImmediate 的 polyfill\n// 原理是将新的 message 事件加入到原有的 dom events 之后\n// 兼容性 IE10+ 和其他标准浏览器\nif (typeof MessageChannel === constant.RAW_FUNCTION && isNative(MessageChannel)) {\n  nextTick = function (fn: any) {\n    const channel = new MessageChannel()\n    channel.port1.onmessage = fn\n    channel.port2.postMessage(1)\n  }\n}\nelse {\n  nextTick = setTimeout\n}\n\nexport default nextTick\n","import {\n  Task,\n} from 'yox-type/src/type'\n\nimport * as array from './array'\nimport execute from '../function/execute'\nimport nextTick from '../function/nextTick'\n\nlet shared: NextTask | void\n\nexport default class NextTask {\n\n  /**\n   * 全局单例\n   */\n  public static shared(): NextTask {\n    return shared || (shared = new NextTask())\n  }\n\n  /**\n   * 异步队列\n   */\n  tasks: Task[]\n\n  constructor() {\n    this.tasks = []\n  }\n\n  /**\n   * 在队尾添加异步任务\n   */\n  append(func: Function, context?: any): void {\n    const instance = this, { tasks } = instance\n    array.push(\n      tasks,\n      {\n        fn: func,\n        ctx: context\n      }\n    )\n    if (tasks.length === 1) {\n      nextTick(\n        function () {\n          instance.run()\n        }\n      )\n    }\n  }\n\n  /**\n   * 在队首添加异步任务\n   */\n  prepend(func: Function, context?: any): void {\n    const instance = this, { tasks } = instance\n    array.unshift(\n      tasks,\n      {\n        fn: func,\n        ctx: context\n      }\n    )\n    if (tasks.length === 1) {\n      nextTick(\n        function () {\n          instance.run()\n        }\n      )\n    }\n  }\n\n  /**\n   * 清空异步队列\n   */\n  clear(): void {\n    this.tasks.length = 0\n  }\n\n  /**\n   * 立即执行异步任务，并清空队列\n   */\n  run(): void {\n    const { tasks } = this\n    if (tasks.length) {\n      this.tasks = []\n      array.each(\n        tasks,\n        function (task) {\n          execute(task.fn, task.ctx)\n        }\n      )\n    }\n  }\n\n}\n","// vnode.data 内部使用的几个字段\n\nexport const ID = '$id'\n\nexport const VNODE = '$vnode'\n\nexport const LOADING = '$loading'\n\nexport const COMPONENT = '$component'\n\nexport const LEAVING = '$leaving'","import {\n  VNode,\n} from 'yox-type/src/vnode'\n\nimport * as constant from 'yox-common/src/util/constant'\n\nexport function update(api: any, vnode: VNode, oldVnode?: VNode) {\n\n  const { node, nativeAttrs } = vnode,\n\n  oldNativeAttrs = oldVnode && oldVnode.nativeAttrs\n\n  if (nativeAttrs || oldNativeAttrs) {\n\n    const newValue = nativeAttrs || constant.EMPTY_OBJECT,\n\n    oldValue = oldNativeAttrs || constant.EMPTY_OBJECT\n\n    for (let name in newValue) {\n      if (oldValue[name] === constant.UNDEFINED\n        || newValue[name] !== oldValue[name]\n      ) {\n        api.attr(node, name, newValue[name])\n      }\n    }\n\n    for (let name in oldValue) {\n      if (newValue[name] === constant.UNDEFINED) {\n        api.removeAttr(node, name)\n      }\n    }\n\n  }\n\n}\n","import {\n  VNode,\n} from 'yox-type/src/vnode'\n\nimport * as constant from 'yox-common/src/util/constant'\n\nexport function update(api: any, vnode: VNode, oldVnode?: VNode) {\n\n  const { node, nativeProps } = vnode,\n\n  oldNativeProps = oldVnode && oldVnode.nativeProps\n\n  if (nativeProps || oldNativeProps) {\n\n    const newValue = nativeProps || constant.EMPTY_OBJECT,\n\n    oldValue = oldNativeProps || constant.EMPTY_OBJECT\n\n    for (let name in newValue) {\n      if (oldValue[name] === constant.UNDEFINED\n        || newValue[name] !== oldValue[name]\n      ) {\n        api.prop(node, name, newValue[name])\n      }\n    }\n\n    for (let name in oldValue) {\n      if (newValue[name] === constant.UNDEFINED) {\n        api.removeProp(node, name)\n      }\n    }\n\n  }\n\n}","import {\n  VNode,\n} from 'yox-type/src/vnode'\n\nimport * as constant from 'yox-common/src/util/constant'\n\nimport * as field from './field'\n\nexport function update(vnode: VNode, oldVnode?: VNode) {\n\n  const { data, directives } = vnode,\n\n  oldDirectives = oldVnode && oldVnode.directives\n\n  if (directives || oldDirectives) {\n\n    const node = data[field.COMPONENT] || vnode.node,\n\n    isKeypathChange = oldVnode && vnode.keypath !== oldVnode.keypath,\n\n    newValue = directives || constant.EMPTY_OBJECT,\n\n    oldValue = oldDirectives || constant.EMPTY_OBJECT\n\n\n    for (let name in newValue) {\n\n      const directive = newValue[name],\n\n      { once, bind, unbind } = directive.hooks\n\n      if (!oldValue[name]) {\n        bind(node, directive, vnode)\n      }\n      else if (once\n        || directive.value !== oldValue[name].value\n        || isKeypathChange\n      ) {\n        if (unbind) {\n          unbind(node, oldValue[name], oldVnode as VNode)\n        }\n        bind(node, directive, vnode)\n      }\n\n    }\n\n    for (let name in oldValue) {\n      if (!newValue[name]) {\n        const { unbind } = oldValue[name].hooks\n        if (unbind) {\n          unbind(node, oldValue[name], oldVnode as VNode)\n        }\n      }\n    }\n\n  }\n\n}\n\nexport function remove(vnode: VNode) {\n  const { directives } = vnode\n  if (directives) {\n    const node = vnode.data[field.COMPONENT] || vnode.node\n    for (let name in directives) {\n      const { unbind } = directives[name].hooks\n      if (unbind) {\n        unbind(node, directives[name], vnode)\n      }\n    }\n  }\n}\n","import {\n  VNode,\n} from 'yox-type/src/vnode'\n\nimport {\n  DIRECTIVE_MODEL,\n} from 'yox-config/src/config'\n\nimport * as object from 'yox-common/src/util/object'\n\nimport * as field from './field'\n\nexport function update(vnode: VNode, oldVnode?: VNode) {\n\n  let { data, ref, props, slots, directives, context } = vnode, node: any\n\n  if (vnode.isComponent) {\n    node = data[field.COMPONENT]\n    // 更新时才要 set\n    // 因为初始化时，所有这些都经过构造函数完成了\n    if (oldVnode) {\n\n      const model = directives && directives[DIRECTIVE_MODEL]\n      if (model) {\n        if (!props) {\n          props = {}\n        }\n        props[node.$model] = model.value\n      }\n\n      if (process.env.NODE_ENV === 'development') {\n        if (props) {\n          object.each(\n            props,\n            function (value, key) {\n              node.checkProp(key, value)\n            }\n          )\n        }\n      }\n\n      const result = object.merge(props, slots)\n      if (result) {\n        node.forceUpdate(result)\n      }\n    }\n  }\n  else {\n    node = vnode.node\n  }\n\n  if (ref) {\n    const refs = context.$refs\n    if (refs) {\n      refs[ref] = node\n    }\n  }\n\n}\n","import {\n  Data,\n} from 'yox-type/src/type'\n\nimport {\n  DomApi,\n} from 'yox-type/src/api'\n\nimport {\n  VNode,\n} from 'yox-type/src/vnode'\n\nimport {\n  ComponentOptions,\n} from 'yox-type/src/options'\n\nimport {\n  YoxInterface,\n} from 'yox-type/src/yox'\n\nimport * as is from 'yox-common/src/util/is'\nimport * as array from 'yox-common/src/util/array'\nimport * as object from 'yox-common/src/util/object'\nimport * as logger from 'yox-common/src/util/logger'\nimport * as constant from 'yox-common/src/util/constant'\n\nimport execute from 'yox-common/src/function/execute'\n\nimport * as field from './field'\n\nimport * as nativeAttr from './nativeAttr'\nimport * as nativeProp from './nativeProp'\nimport * as directive from './directive'\nimport * as component from './component'\n\nfunction isPatchable(vnode: VNode, oldVnode: VNode): boolean {\n  return vnode.tag === oldVnode.tag\n    && vnode.key === oldVnode.key\n}\n\nfunction createKeyToIndex(vnodes: (VNode | void)[], startIndex: number, endIndex: number): Record<string, number> {\n\n  let result: Record<string, number> | void,\n\n  vnode: VNode | void,\n\n  key: string | void\n\n  while (startIndex <= endIndex) {\n    vnode = vnodes[startIndex]\n    if (vnode && (key = vnode.key)) {\n      if (!result) {\n        result = {}\n      }\n      result[key] = startIndex\n    }\n    startIndex++\n  }\n\n  return result || constant.EMPTY_OBJECT\n\n}\n\nfunction insertBefore(api: DomApi, parentNode: Node, node: Node, referenceNode: Node | void) {\n  if (referenceNode) {\n    api.before(parentNode, node, referenceNode)\n  }\n  else {\n    api.append(parentNode, node)\n  }\n}\n\nfunction createComponent(vnode: VNode, options: ComponentOptions) {\n\n  const child = (vnode.parent || vnode.context).createComponent(options, vnode)\n\n  vnode.data[field.COMPONENT] = child\n  vnode.data[field.LOADING] = constant.FALSE\n\n  component.update(vnode)\n  directive.update(vnode)\n\n  return child\n\n}\n\nlet guid = 0\n\nfunction createData(): Data {\n  const data = {}\n  data[field.ID] = ++guid\n  return data\n}\n\nfunction createVnode(api: DomApi, vnode: VNode) {\n\n  let { tag, node, data, isComponent, isComment, isText, isStyle, isOption, children, text, html, context } = vnode\n\n  if (node && data) {\n    return\n  }\n\n  data = createData()\n\n  vnode.data = data\n\n  if (isText) {\n    vnode.node = api.createText(text as string)\n    return\n  }\n\n  if (isComment) {\n    vnode.node = api.createComment(text as string)\n    return\n  }\n\n  if (isComponent) {\n\n    let componentOptions: ComponentOptions | undefined = constant.UNDEFINED\n\n    // 动态组件，tag 可能为空\n    if (tag) {\n      context.loadComponent(\n        tag,\n        function (options: ComponentOptions) {\n          if (object.has(data, field.LOADING)) {\n            // 异步组件\n            if (data[field.LOADING]) {\n              // 尝试使用最新的 vnode\n              if (data[field.VNODE]) {\n                vnode = data[field.VNODE]\n                // 用完就删掉\n                delete data[field.VNODE]\n              }\n              enterVnode(\n                vnode,\n                createComponent(vnode, options)\n              )\n            }\n          }\n          // 同步组件\n          else {\n            componentOptions = options\n          }\n        }\n      )\n    }\n\n    // 不论是同步还是异步组件，都需要一个占位元素\n    vnode.node = api.createComment(constant.RAW_COMPONENT)\n\n    if (componentOptions) {\n      createComponent(vnode, componentOptions as ComponentOptions)\n    }\n    else {\n      data[field.LOADING] = constant.TRUE\n    }\n\n  }\n  else {\n\n    node = vnode.node = api.createElement(vnode.tag as string, vnode.isSvg)\n\n    if (children) {\n      addVnodes(api, node, children)\n    }\n    else if (text) {\n      api.text(node as Element, text, isStyle, isOption)\n    }\n    else if (html) {\n      api.html(node as Element, html, isStyle, isOption)\n    }\n\n    nativeAttr.update(api, vnode)\n    nativeProp.update(api, vnode)\n    component.update(vnode)\n    directive.update(vnode)\n\n  }\n}\n\nfunction addVnodes(api: DomApi, parentNode: Node, vnodes: VNode[], startIndex?: number, endIndex?: number, before?: VNode) {\n  let vnode: VNode, start = startIndex || 0, end = endIndex !== constant.UNDEFINED ? endIndex as number : vnodes.length - 1\n  while (start <= end) {\n    vnode = vnodes[start]\n    createVnode(api, vnode)\n    insertVnode(api, parentNode, vnode, before)\n    start++\n  }\n}\n\nfunction insertVnode(api: DomApi, parentNode: Node, vnode: VNode, before?: VNode) {\n\n  const { node, data, context } = vnode,\n\n  hasParent = api.parent(node)\n\n  // 这里不调用 insertBefore，避免判断两次\n  if (before) {\n    api.before(parentNode, node, before.node)\n  }\n  else {\n    api.append(parentNode, node)\n  }\n\n  // 普通元素和组件的占位节点都会走到这里\n  // 但是占位节点不用 enter，而是等组件加载回来之后再调 enter\n  if (!hasParent) {\n    let enter: Function | void = constant.UNDEFINED\n    if (vnode.isComponent) {\n      const component = data[field.COMPONENT]\n      if (component) {\n        enter = function () {\n          enterVnode(vnode, component)\n        }\n      }\n    }\n    else if (!vnode.isStatic && !vnode.isText && !vnode.isComment) {\n      enter = function () {\n        enterVnode(vnode)\n      }\n    }\n    if (enter) {\n      // 执行到这时，组件还没有挂载到 DOM 树\n      // 如果此时直接触发 enter，外部还需要做多余的工作，比如 setTimeout\n      // 索性这里直接等挂载到 DOM 数之后再触发\n      // 注意：YoxInterface 没有声明 $observer，因为不想让外部访问，\n      // 但是这里要用一次，所以加了 as any\n      (context as any).$observer.nextTask.prepend(enter)\n    }\n  }\n\n}\n\nfunction removeVnodes(api: DomApi, parentNode: Node, vnodes: (VNode | void)[], startIndex?: number, endIndex?: number) {\n  let vnode: VNode | void, start = startIndex || 0, end = endIndex !== constant.UNDEFINED ? endIndex as number : vnodes.length - 1\n  while (start <= end) {\n    vnode = vnodes[start]\n    if (vnode) {\n      removeVnode(api, parentNode, vnode)\n    }\n    start++\n  }\n}\n\nfunction removeVnode(api: DomApi, parentNode: Node, vnode: VNode) {\n  const { node } = vnode\n  if (vnode.isStatic || vnode.isText || vnode.isComment) {\n    api.remove(parentNode, node)\n  }\n  else {\n\n    let done = function () {\n      destroyVnode(api, vnode)\n      api.remove(parentNode, node)\n    },\n\n    component: YoxInterface | void\n\n    if (vnode.isComponent) {\n      component = vnode.data[field.COMPONENT]\n      // 异步组件，还没加载成功就被删除了\n      if (!component) {\n        done()\n        return\n      }\n    }\n\n    leaveVnode(vnode, component, done)\n\n  }\n}\n\nfunction destroyVnode(api: DomApi, vnode: VNode) {\n\n  /**\n   * 如果一个子组件的模板是这样写的：\n   *\n   * <div>\n   *   {{#if visible}}\n   *      <slot name=\"children\"/>\n   *   {{/if}}\n   * </div>\n   *\n   * 当 visible 从 true 变为 false 时，不能销毁 slot 导入的任何 vnode\n   * 不论是组件或是元素，都不能销毁，只能简单的 remove，\n   * 否则子组件下一次展现它们时，会出问题\n   */\n\n  const { data, children, parent, slot } = vnode\n\n  // 销毁插槽组件\n\n  // 如果宿主组件正在销毁，$vnode 属性会在调 destroy() 之前被删除\n  // 这里表示的是宿主组件还没被销毁\n  // 如果宿主组件被销毁了，则它的一切都要进行销毁\n  if (slot && parent && parent.$vnode) {\n    // 如果更新时，父组件没有传入该 slot，则子组件需要销毁该 slot\n    const slots = parent.get(slot)\n    // slots 要么没有，要么是数组，不可能是别的\n    if (slots && array.has(slots, vnode)) {\n      return\n    }\n  }\n\n  if (vnode.isComponent) {\n    const component = data[field.COMPONENT]\n    if (component) {\n      directive.remove(vnode)\n      component.destroy()\n    }\n    else [\n      data[field.LOADING] = constant.FALSE\n    ]\n  }\n  else {\n    directive.remove(vnode)\n    if (children) {\n      array.each(\n        children,\n        function (child) {\n          destroyVnode(api, child)\n        }\n      )\n    }\n  }\n\n}\n\n/**\n * vnode 触发 enter hook 时，外部一般会做一些淡入动画\n */\nfunction enterVnode(vnode: VNode, component: YoxInterface | void) {\n  // 如果组件根元素和组件本身都写了 transition\n  // 优先用外面定义的\n  // 因为这明确是在覆盖配置\n  let { data, transition } = vnode\n  if (component && !transition) {\n    // 再看组件根元素是否有 transition\n    transition = (component.$vnode as VNode).transition\n  }\n  execute(data[field.LEAVING])\n  if (transition) {\n    const { enter } = transition\n    if (enter) {\n      enter(\n        vnode.node as HTMLElement\n      )\n      return\n    }\n  }\n}\n\n/**\n * vnode 触发 leave hook 时，外部一般会做一些淡出动画\n * 动画结束后才能移除节点，否则无法产生动画\n * 这里由外部调用 done 来通知内部动画结束\n */\nfunction leaveVnode(vnode: VNode, component: YoxInterface | void, done: () => void) {\n  // 如果组件根元素和组件本身都写了 transition\n  // 优先用外面定义的\n  // 因为这明确是在覆盖配置\n  let { data, transition } = vnode\n  if (component && !transition) {\n    // 再看组件根元素是否有 transition\n    transition = (component.$vnode as VNode).transition\n  }\n  if (transition) {\n    const { leave } = transition\n    if (leave) {\n      leave(\n        vnode.node as HTMLElement,\n        data[field.LEAVING] = function () {\n          if (data[field.LEAVING]) {\n            done()\n            data[field.LEAVING] = constant.UNDEFINED\n          }\n        }\n      )\n      return\n    }\n  }\n  // 如果没有淡出动画，直接结束\n  done()\n}\n\nfunction updateChildren(api: DomApi, parentNode: Node, children: VNode[], oldChildren: (VNode | void)[]) {\n\n  let startIndex = 0,\n  endIndex = children.length - 1,\n  startVnode = children[startIndex],\n  endVnode = children[endIndex],\n\n  oldStartIndex = 0,\n  oldEndIndex = oldChildren.length - 1,\n  oldStartVnode = oldChildren[oldStartIndex],\n  oldEndVnode = oldChildren[oldEndIndex],\n\n  oldKeyToIndex: Record<string, number> | void,\n  oldIndex: number | void\n\n  while (oldStartIndex <= oldEndIndex && startIndex <= endIndex) {\n\n    // 下面有设为 UNDEFINED 的逻辑\n    if (!startVnode) {\n      startVnode = children[++startIndex];\n    }\n    else if (!endVnode) {\n      endVnode = children[--endIndex];\n    }\n    else if (!oldStartVnode) {\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n    else if (!oldEndVnode) {\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 从头到尾比较，位置相同且值得 patch\n    else if (isPatchable(startVnode, oldStartVnode)) {\n      patch(api, startVnode, oldStartVnode)\n      startVnode = children[++startIndex]\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n\n    // 从尾到头比较，位置相同且值得 patch\n    else if (isPatchable(endVnode, oldEndVnode)) {\n      patch(api, endVnode, oldEndVnode)\n      endVnode = children[--endIndex]\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 比较完两侧的节点，剩下就是 位置发生改变的节点 和 全新的节点\n\n    // 当 endVnode 和 oldStartVnode 值得 patch\n    // 说明元素被移到右边了\n    else if (isPatchable(endVnode, oldStartVnode)) {\n      patch(api, endVnode, oldStartVnode)\n      insertBefore(\n        api,\n        parentNode,\n        oldStartVnode.node,\n        api.next(oldEndVnode.node)\n      )\n      endVnode = children[--endIndex]\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n\n    // 当 oldEndVnode 和 startVnode 值得 patch\n    // 说明元素被移到左边了\n    else if (isPatchable(startVnode, oldEndVnode)) {\n      patch(api, startVnode, oldEndVnode)\n      insertBefore(\n        api,\n        parentNode,\n        oldEndVnode.node,\n        oldStartVnode.node\n      )\n      startVnode = children[++startIndex]\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 尝试同级元素的 key\n    else {\n\n      if (!oldKeyToIndex) {\n        oldKeyToIndex = createKeyToIndex(oldChildren, oldStartIndex, oldEndIndex)\n      }\n\n      // 新节点之前的位置\n      oldIndex = startVnode.key\n        ? oldKeyToIndex[startVnode.key]\n        : constant.UNDEFINED\n\n      // 移动元素\n      if (oldIndex !== constant.UNDEFINED) {\n        patch(api, startVnode, oldChildren[oldIndex as number] as VNode)\n        oldChildren[oldIndex as number] = constant.UNDEFINED\n      }\n      // 新元素\n      else {\n        createVnode(api, startVnode)\n      }\n\n      insertVnode(api, parentNode, startVnode, oldStartVnode)\n\n      startVnode = children[++startIndex]\n\n    }\n  }\n\n  if (oldStartIndex > oldEndIndex) {\n    addVnodes(\n      api,\n      parentNode,\n      children,\n      startIndex,\n      endIndex,\n      children[endIndex + 1]\n    )\n  }\n  else if (startIndex > endIndex) {\n    removeVnodes(\n      api,\n      parentNode,\n      oldChildren,\n      oldStartIndex,\n      oldEndIndex\n    )\n  }\n}\n\nexport function patch(api: DomApi, vnode: VNode, oldVnode: VNode) {\n\n  if (vnode === oldVnode) {\n    return\n  }\n\n  const { node, data } = oldVnode\n\n  // 如果不能 patch，则删除重建\n  if (!isPatchable(vnode, oldVnode)) {\n    // 同步加载的组件，初始化时不会传入占位节点\n    // 它内部会自动生成一个注释节点，当它的根 vnode 和注释节点对比时，必然无法 patch\n    // 于是走进此分支，为新组件创建一个 DOM 节点，然后继续 createComponent 后面的流程\n    const parentNode = api.parent(node)\n    createVnode(api, vnode)\n    if (parentNode) {\n      insertVnode(api, parentNode, vnode, oldVnode)\n      removeVnode(api, parentNode, oldVnode)\n    }\n    return\n  }\n\n  vnode.node = node\n  vnode.data = data\n\n  // 组件正在异步加载，更新为最新的 vnode\n  // 当异步加载完成时才能用上最新的 vnode\n  if (oldVnode.isComponent && data[field.LOADING]) {\n    data[field.VNODE] = vnode\n    return\n  }\n\n  nativeAttr.update(api, vnode, oldVnode)\n  nativeProp.update(api, vnode, oldVnode)\n  component.update(vnode, oldVnode)\n  directive.update(vnode, oldVnode)\n\n  const { text, html, children, isStyle, isOption } = vnode,\n\n  oldText = oldVnode.text,\n  oldHtml = oldVnode.html,\n  oldChildren = oldVnode.children\n\n  if (is.string(text)) {\n    if (text !== oldText) {\n      api.text(node, text, isStyle, isOption)\n    }\n  }\n  else if (is.string(html)) {\n    if (html !== oldHtml) {\n      api.html(node as Element, html, isStyle, isOption)\n    }\n  }\n  // 两个都有需要 diff\n  else if (children && oldChildren) {\n    if (children !== oldChildren) {\n      updateChildren(api, node, children, oldChildren)\n    }\n  }\n  // 有新的没旧的 - 新增节点\n  else if (children) {\n    if (is.string(oldText) || is.string(oldHtml)) {\n      api.text(node, constant.EMPTY_STRING, isStyle)\n    }\n    addVnodes(api, node, children)\n  }\n  // 有旧的没新的 - 删除节点\n  else if (oldChildren) {\n    removeVnodes(api, node, oldChildren)\n  }\n  // 有旧的 text 没有新的 text\n  else if (is.string(oldText) || is.string(oldHtml)) {\n    api.text(node, constant.EMPTY_STRING, isStyle)\n  }\n\n}\n\nexport function create(api: DomApi, node: Node, context: YoxInterface, keypath: string): VNode {\n  return {\n    tag: api.tag(node),\n    data: createData(),\n    node,\n    context,\n    keypath,\n  }\n}\n\nexport function destroy(api: DomApi, vnode: VNode, isRemove?: boolean) {\n  if (isRemove) {\n    const parentNode = api.parent(vnode.node)\n    if (parentNode) {\n      removeVnode(api, parentNode, vnode)\n    }\n    else if (process.env.NODE_ENV === 'development') {\n      logger.fatal(`The vnode can't be destroyed without a parent node.`)\n    }\n  }\n  else {\n    destroyVnode(api, vnode)\n  }\n}\n","import * as is from '../util/is'\nimport * as constant from '../util/constant'\n\nexport default function (target: any, defaultValue?: number): number {\n  return is.numeric(target)\n    ? +target\n    : defaultValue !== constant.UNDEFINED\n      ? defaultValue as number\n      : 0\n}\n","import {\n  SLOT_DATA_PREFIX,\n} from 'yox-config/src/config'\n\nimport {\n  Data,\n  Listener,\n  LazyValue,\n  ValueHolder,\n  PropertyHint,\n} from 'yox-type/src/type'\n\nimport {\n  VNode,\n} from 'yox-type/src/vnode'\n\nimport {\n  DirectiveHooks,\n  TransitionHooks,\n} from 'yox-type/src/hooks'\n\nimport {\n  YoxInterface,\n} from 'yox-type/src/yox'\n\nimport {\n  DIRECTIVE_BINDING,\n  DIRECTIVE_MODEL,\n  DIRECTIVE_EVENT,\n  DIRECTIVE_CUSTOM,\n} from 'yox-config/src/config'\n\nimport execute from 'yox-common/src/function/execute'\nimport toString from 'yox-common/src/function/toString'\nimport CustomEvent from 'yox-common/src/util/CustomEvent'\n\nimport * as is from 'yox-common/src/util/is'\nimport * as array from 'yox-common/src/util/array'\nimport * as object from 'yox-common/src/util/object'\nimport * as string from 'yox-common/src/util/string'\nimport * as logger from 'yox-common/src/util/logger'\nimport * as constant from 'yox-common/src/util/constant'\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\nimport globalHolder from 'yox-common/src/util/holder'\n\nimport Observer from 'yox-observer/src/Observer'\n\nfunction setPair(target: any, name: string, key: string, value: any) {\n  const data = target[name] || (target[name] = {})\n  data[key] = value\n}\n\nconst KEY_DIRECTIVES = 'directives'\n\nexport function render(\n  context: YoxInterface,\n  observer: Observer,\n  template: Function,\n  filters: Record<string, Function>,\n  partials: Record<string, Function>,\n  directives: Record<string, DirectiveHooks>,\n  transitions: Record<string, TransitionHooks>\n) {\n\n  let $scope: Data = { $keypath: constant.EMPTY_STRING },\n\n  $stack = [ $scope ],\n\n  $vnode: any,\n\n  vnodeStack: VNode[][] = [],\n\n  localPartials: Record<string, Function> = {},\n\n  renderedSlots: Record<string, true> = {},\n\n  findValue = function (stack: any[], index: number, key: string, lookup: boolean, depIgnore?: boolean, defaultKeypath?: string): ValueHolder {\n\n    let scope = stack[index], keypath = keypathUtil.join(scope.$keypath, key), value: any = stack, holder = globalHolder\n\n    // 如果最后还是取不到值，用回最初的 keypath\n    if (defaultKeypath === constant.UNDEFINED) {\n      defaultKeypath = keypath\n    }\n\n    // 如果取的是 scope 上直接有的数据，如 $keypath\n    if (scope[key] !== constant.UNDEFINED) {\n      value = scope[key]\n    }\n\n    // 如果取的是数组项，则要更进一步\n    else if (scope.$item !== constant.UNDEFINED) {\n      scope = scope.$item\n\n      // 到这里 scope 可能为空\n      // 比如 new Array(10) 然后遍历这个数组，每一项肯定是空\n\n      // 取 this\n      if (key === constant.EMPTY_STRING) {\n        value = scope\n      }\n      // 取 this.xx\n      else if (scope != constant.NULL && scope[key] !== constant.UNDEFINED) {\n        value = scope[key]\n      }\n    }\n\n    if (value === stack) {\n      // 正常取数据\n      value = observer.get(keypath, stack, depIgnore)\n      if (value === stack) {\n\n        if (lookup && index > 0) {\n          if (process.env.NODE_ENV === 'development') {\n            logger.debug(`The data \"${keypath}\" can't be found in the current context, start looking up.`)\n          }\n          return findValue(stack, index - 1, key, lookup, depIgnore, defaultKeypath)\n        }\n\n        // 到头了，最后尝试过滤器\n        const result = object.get(filters, key)\n        if (result) {\n          holder = result\n          holder.keypath = key\n        }\n        else {\n          holder.value = constant.UNDEFINED\n          holder.keypath = defaultKeypath\n        }\n        return holder\n\n      }\n    }\n\n    holder.value = value\n    holder.keypath = keypath\n\n    return holder\n\n  },\n\n  createEventListener = function (type: string): Listener {\n    return function (event: CustomEvent, data?: Data) {\n      // 事件名称相同的情况，只可能是监听 DOM 事件，比如写一个 Button 组件\n      // <button on-click=\"click\"> 纯粹的封装了一个原生 click 事件\n      if (type !== event.type) {\n        event = new CustomEvent(type, event)\n      }\n      context.fire(event, data)\n    }\n  },\n\n  createMethodListener = function (\n    name: string,\n    args: Function | void,\n    stack: any[]\n  ): Listener {\n    return function (event: CustomEvent, data?: Data) {\n\n      const method = context[name]\n\n      if (event instanceof CustomEvent) {\n\n        let result: any = constant.UNDEFINED\n\n        if (args) {\n          const scope = array.last(stack)\n          if (scope) {\n            scope.$event = event\n            scope.$data = data\n            result = execute(method, context, args(stack))\n            scope.$event =\n            scope.$data = constant.UNDEFINED\n          }\n        }\n        else {\n          result = execute(method, context, data ? [event, data] : event)\n        }\n\n        return result\n\n      }\n      else {\n        execute(\n          method,\n          context,\n          args ? args(stack) : constant.UNDEFINED\n        )\n      }\n\n    }\n  },\n\n  createGetter = function (getter: Function, stack: any[]): () => any {\n    return function () {\n      return getter(stack)\n    }\n  },\n\n  renderTextVnode = function (text: string) {\n    const vnodeList = array.last(vnodeStack)\n    if (vnodeList) {\n      const lastVnode = array.last(vnodeList)\n      if (lastVnode && lastVnode.isText) {\n        (lastVnode.text as string) += text\n      }\n      else {\n        const textVnode: Data = {\n          isText: constant.TRUE,\n          text,\n          context,\n          keypath: $scope.$keypath,\n        }\n        array.push(vnodeList, textVnode)\n      }\n    }\n  },\n\n  renderAttributeVnode = function (name: string, value: string | void) {\n    setPair(\n      $vnode,\n      $vnode.isComponent ? 'props' : 'nativeAttrs',\n      name,\n      value\n    )\n  },\n\n  renderPropertyVnode = function (name: string, value: any) {\n    setPair($vnode, 'nativeProps', name, value)\n  },\n\n  renderLazyVnode = function (name: string, value: LazyValue) {\n    setPair($vnode, 'lazy', name, value)\n  },\n\n  renderTransitionVnode = function (name: string) {\n    $vnode.transition = transitions[name]\n    if (process.env.NODE_ENV === 'development') {\n      if (!$vnode.transition) {\n        logger.fatal(`The transition \"${name}\" can't be found.`)\n      }\n    }\n  },\n\n  renderBindingVnode = function (name: string, holder: ValueHolder, hint?: PropertyHint): any {\n\n    const key = keypathUtil.join(DIRECTIVE_BINDING, name)\n\n    setPair(\n      $vnode,\n      KEY_DIRECTIVES,\n      key,\n      {\n        ns: DIRECTIVE_BINDING,\n        name,\n        key,\n        modifier: holder.keypath,\n        hooks: directives[DIRECTIVE_BINDING],\n        hint,\n      }\n    )\n\n    return holder.value\n\n  },\n\n  renderModelVnode = function (holder: ValueHolder) {\n    setPair(\n      $vnode,\n      KEY_DIRECTIVES,\n      DIRECTIVE_MODEL,\n      {\n        ns: DIRECTIVE_MODEL,\n        name: constant.EMPTY_STRING,\n        key: DIRECTIVE_MODEL,\n        value: holder.value,\n        modifier: holder.keypath,\n        hooks: directives[DIRECTIVE_MODEL]\n      }\n    )\n  },\n\n  renderEventMethodVnode = function (\n    name: string, key: string,\n    modifier: string, value: string,\n    method: string, args: Function | void\n  ) {\n    setPair(\n      $vnode,\n      KEY_DIRECTIVES,\n      key,\n      {\n        ns: DIRECTIVE_EVENT,\n        name,\n        key,\n        value,\n        modifier,\n        hooks: directives[DIRECTIVE_EVENT],\n        handler: createMethodListener(method, args, $stack),\n      }\n    )\n  },\n\n  renderEventNameVnode = function (\n    name: string, key: string,\n    modifier: string, value: string,\n    event: string\n  ) {\n    setPair(\n      $vnode,\n      KEY_DIRECTIVES,\n      key,\n      {\n        ns: DIRECTIVE_EVENT,\n        name,\n        key,\n        value,\n        modifier,\n        hooks: directives[DIRECTIVE_EVENT],\n        handler: createEventListener(event),\n      }\n    )\n  },\n\n  renderDirectiveVnode = function (\n    name: string, key: string,\n    modifier: string, value: string,\n    method: string | void, args: Function | void, getter: Function | void\n  ) {\n\n    const hooks = directives[name]\n\n    if (process.env.NODE_ENV === 'development') {\n      if (!hooks) {\n        logger.fatal(`The directive ${name} can't be found.`)\n      }\n    }\n\n    setPair(\n      $vnode,\n      KEY_DIRECTIVES,\n      key,\n      {\n        ns: DIRECTIVE_CUSTOM,\n        name,\n        key,\n        value,\n        hooks,\n        modifier,\n        getter: getter ? createGetter(getter, $stack) : constant.UNDEFINED,\n        handler: method ? createMethodListener(method, args, $stack) : constant.UNDEFINED,\n      }\n    )\n\n  },\n\n  renderSpreadVnode = function (holder: ValueHolder) {\n\n    const { value, keypath } = holder\n\n    if (is.object(value)) {\n\n      // 数组也算一种对象\n      // 延展操作符不支持数组\n      if (process.env.NODE_ENV === 'development') {\n        if (is.array(value)) {\n          logger.fatal(`The spread operator can't be used by an array.`)\n        }\n      }\n\n      for (let key in value) {\n        setPair($vnode, 'props', key, value[key])\n      }\n\n      if (keypath) {\n        const key = keypathUtil.join(DIRECTIVE_BINDING, keypath)\n        setPair(\n          $vnode,\n          KEY_DIRECTIVES,\n          key,\n          {\n            ns: DIRECTIVE_BINDING,\n            name: constant.EMPTY_STRING,\n            key,\n            modifier: keypathUtil.join(keypath, constant.RAW_WILDCARD),\n            hooks: directives[DIRECTIVE_BINDING],\n          }\n        )\n      }\n\n    }\n\n  },\n\n  appendVnode = function (vnode: Data) {\n    const vnodeList = array.last(vnodeStack)\n    if (vnodeList) {\n      array.push(vnodeList, vnode)\n    }\n    return vnode\n  },\n\n  renderCommentVnode = function () {\n    return appendVnode({\n      isComment: constant.TRUE,\n      text: constant.EMPTY_STRING,\n      keypath: $scope.$keypath,\n      context,\n    })\n  },\n\n  renderElementVnode = function (\n    tag: string,\n    attrs: Function | void,\n    childs: Function | void,\n    text: string | void,\n    isStatic: true | void,\n    isOption: true | void,\n    isStyle: true | void,\n    isSvg: true | void,\n    html: string | void,\n    ref: string | void,\n    key: string | void\n  ) {\n\n    const vnode: Data = {\n      tag,\n      text,\n      html,\n      isStatic,\n      isOption,\n      isStyle,\n      isSvg,\n      ref,\n      key,\n      context,\n      keypath: $scope.$keypath,\n    }\n\n    if (attrs) {\n      $vnode = vnode\n      attrs()\n      $vnode = constant.UNDEFINED\n    }\n\n    if (childs) {\n      vnodeStack.push(vnode.children = [])\n      childs()\n      array.pop(vnodeStack)\n    }\n\n    return appendVnode(vnode)\n\n  },\n\n  renderComponentVnode = function (\n    staticTag: string | void,\n    attrs: Function | void,\n    slots: Record<string, Function> | void,\n    ref: string | void,\n    key: string | void,\n    dynamicTag: string | void\n  ) {\n\n    let tag: string\n\n    // 组件支持动态名称\n    if (dynamicTag) {\n      const componentName = observer.get(dynamicTag)\n      if (process.env.NODE_ENV === 'development') {\n        if (!componentName) {\n          logger.warn(`The dynamic component \"${dynamicTag}\" can't be found.`)\n        }\n      }\n      tag = componentName\n    }\n    else {\n      tag = staticTag as string\n    }\n\n    const vnode: Data = {\n      tag,\n      ref,\n      key,\n      context,\n      keypath: $scope.$keypath,\n      isComponent: constant.TRUE,\n    }\n\n    if (attrs) {\n      $vnode = vnode\n      attrs()\n      $vnode = constant.UNDEFINED\n    }\n\n    if (slots) {\n      const vnodeSlots = {}\n      for (let name in slots) {\n        vnodeStack.push([])\n        slots[name]()\n        const vnodes = array.pop(vnodeStack) as VNode[]\n        vnodeSlots[name] = vnodes.length ? vnodes : constant.UNDEFINED\n      }\n      vnode.slots = vnodeSlots\n    }\n\n    return appendVnode(vnode)\n\n  },\n\n  renderExpressionIdentifier = function (\n    name: string,\n    lookup: boolean,\n    offset?: number,\n    holder?: boolean,\n    depIgnore?: boolean,\n    stack?: any[]\n  ) {\n    const myStack = stack || $stack,\n    result = findValue(\n      myStack,\n      myStack.length - 1 - (offset || 0),\n      name,\n      lookup,\n      depIgnore\n    )\n    return holder ? result : result.value\n  },\n\n  renderExpressionMemberKeypath = function (\n    identifier: string,\n    runtimeKeypath: string[]\n  ) {\n    array.unshift(runtimeKeypath, identifier)\n    return array.join(runtimeKeypath, constant.RAW_DOT)\n  },\n\n  renderExpressionMemberLiteral = function (\n    value: any,\n    staticKeypath: string | void,\n    runtimeKeypath: string[] | void,\n    holder: boolean | void\n  ) {\n    if (runtimeKeypath !== constant.UNDEFINED) {\n      staticKeypath = array.join(runtimeKeypath as string[], constant.RAW_DOT)\n    }\n    const match = object.get(value, staticKeypath as string)\n    globalHolder.keypath = constant.UNDEFINED\n    globalHolder.value = match ? match.value : constant.UNDEFINED\n    return holder ? globalHolder : globalHolder.value\n  },\n\n  renderExpressionCall = function (\n    fn: Function | void,\n    args: any[] | void,\n    holder: boolean | void\n  ) {\n    globalHolder.keypath = constant.UNDEFINED\n    // 当 holder 为 true, args 为空时，args 会传入 false\n    globalHolder.value = execute(fn, context, args || constant.UNDEFINED)\n    return holder ? globalHolder : globalHolder.value\n  },\n\n  // <slot name=\"xx\"/>\n  renderSlot = function (name: string, defaultRender?: Function) {\n\n    const vnodeList = array.last(vnodeStack),\n\n    vnodes = context.get(name)\n\n    if (vnodeList) {\n      if (vnodes) {\n        for (let i = 0, length = vnodes.length; i < length; i++) {\n          array.push(vnodeList, vnodes[i])\n          vnodes[i].slot = name\n          vnodes[i].parent = context\n        }\n      }\n      else if (defaultRender) {\n        defaultRender()\n      }\n    }\n\n    // 不能重复输出相同名称的 slot\n    if (process.env.NODE_ENV === 'development') {\n      if (renderedSlots[name]) {\n        logger.fatal(`The slot \"${string.slice(name, SLOT_DATA_PREFIX.length)}\" can't render more than one time.`)\n      }\n      renderedSlots[name] = constant.TRUE\n    }\n\n  },\n\n  // {{#partial name}}\n  //   xx\n  // {{/partial}}\n  renderPartial = function (name: string, render: Function) {\n    localPartials[name] = render\n  },\n\n  // {{> name}}\n  renderImport = function (name: string) {\n    if (localPartials[name]) {\n      localPartials[name]()\n    }\n    else {\n      const partial = partials[name]\n      if (partial) {\n        partial(\n          renderExpressionIdentifier,\n          renderExpressionMemberKeypath,\n          renderExpressionMemberLiteral,\n          renderExpressionCall,\n          renderTextVnode,\n          renderAttributeVnode,\n          renderPropertyVnode,\n          renderLazyVnode,\n          renderTransitionVnode,\n          renderBindingVnode,\n          renderModelVnode,\n          renderEventMethodVnode,\n          renderEventNameVnode,\n          renderDirectiveVnode,\n          renderSpreadVnode,\n          renderCommentVnode,\n          renderElementVnode,\n          renderComponentVnode,\n          renderSlot,\n          renderPartial,\n          renderImport,\n          renderEach,\n          renderRange,\n          renderEqualRange,\n          toString\n        )\n      }\n      else if (process.env.NODE_ENV === 'development') {\n        logger.fatal(`The partial \"${name}\" can't be found.`)\n      }\n    }\n  },\n\n  eachHandler = function (\n    generate: Function,\n    item: any,\n    key: string | number,\n    keypath: string,\n    index: string | void,\n    length: number | void\n  ) {\n\n    const lastScope = $scope, lastStack = $stack\n\n    // each 会改变 keypath\n    $scope = { $keypath: keypath }\n    $stack = lastStack.concat($scope)\n\n    // 避免模板里频繁读取 list.length\n    if (length !== constant.UNDEFINED) {\n      $scope.$length = length\n    }\n\n    // 业务层是否写了 expr:index\n    if (index) {\n      $scope[index] = key\n    }\n\n    // 无法通过 context.get($keypath + key) 读取到数据的场景\n    // 必须把 item 写到 scope\n    if (!keypath) {\n      $scope.$item = item\n    }\n\n    generate()\n\n    $scope = lastScope\n    $stack = lastStack\n\n  },\n\n  renderEach = function (\n    generate: Function,\n    holder: ValueHolder,\n    index: string | void\n  ) {\n\n    const { keypath, value } = holder\n\n    if (is.array(value)) {\n      for (let i = 0, length = value.length; i < length; i++) {\n        eachHandler(\n          generate,\n          value[i],\n          i,\n          keypath\n            ? keypathUtil.join(keypath, constant.EMPTY_STRING + i)\n            : constant.EMPTY_STRING,\n          index,\n          length\n        )\n      }\n    }\n    else if (is.object(value)) {\n      for (let key in value) {\n        eachHandler(\n          generate,\n          value[key],\n          key,\n          keypath\n            ? keypathUtil.join(keypath, key)\n            : constant.EMPTY_STRING,\n          index\n        )\n      }\n    }\n\n  },\n\n  renderRange = function (\n    generate: Function,\n    from: number,\n    to: number,\n    index: string | void\n  ) {\n\n    let count = 0\n\n    if (from < to) {\n      for (let i = from; i < to; i++) {\n        eachHandler(\n          generate,\n          i,\n          count++,\n          constant.EMPTY_STRING,\n          index\n        )\n      }\n    }\n    else {\n      for (let i = from; i > to; i--) {\n        eachHandler(\n          generate,\n          i,\n          count++,\n          constant.EMPTY_STRING,\n          index\n        )\n      }\n    }\n\n  },\n\n  renderEqualRange = function (\n    generate: Function,\n    from: number,\n    to: number,\n    index: string | void\n  ) {\n\n    let count = 0\n\n    if (from < to) {\n      for (let i = from; i <= to; i++) {\n        eachHandler(\n          generate,\n          i,\n          count++,\n          constant.EMPTY_STRING,\n          index\n        )\n      }\n    }\n    else {\n      for (let i = from; i >= to; i--) {\n        eachHandler(\n          generate,\n          i,\n          count++,\n          constant.EMPTY_STRING,\n          index\n        )\n      }\n    }\n\n  }\n\n  return template(\n    renderExpressionIdentifier,\n    renderExpressionMemberKeypath,\n    renderExpressionMemberLiteral,\n    renderExpressionCall,\n    renderTextVnode,\n    renderAttributeVnode,\n    renderPropertyVnode,\n    renderLazyVnode,\n    renderTransitionVnode,\n    renderBindingVnode,\n    renderModelVnode,\n    renderEventMethodVnode,\n    renderEventNameVnode,\n    renderDirectiveVnode,\n    renderSpreadVnode,\n    renderCommentVnode,\n    renderElementVnode,\n    renderComponentVnode,\n    renderSlot,\n    renderPartial,\n    renderImport,\n    renderEach,\n    renderRange,\n    renderEqualRange,\n    toString\n  )\n\n}","import {\n  Listener,\n  NativeListener,\n} from 'yox-type/src/type'\n\nimport {\n  SpecialEventHooks,\n} from 'yox-type/src/hooks'\n\nimport execute from 'yox-common/src/function/execute'\n\nimport * as array from 'yox-common/src/util/array'\nimport * as string from 'yox-common/src/util/string'\nimport * as object from 'yox-common/src/util/object'\nimport * as logger from 'yox-common/src/util/logger'\nimport * as constant from 'yox-common/src/util/constant'\n\nimport Emitter from 'yox-common/src/util/Emitter'\nimport CustomEvent from 'yox-common/src/util/CustomEvent'\n\n\nlet guid = 0,\n\n// 这里先写 IE9 支持的接口\ninnerText = 'textContent',\n\ninnerHTML = 'innerHTML',\n\ncreateEvent = function (event: any, node: HTMLElement | Window | Document): any {\n  return event\n},\n\nfindElement = function (selector: string): Element | void {\n  const node = (constant.DOCUMENT as Document).querySelector(selector)\n  if (node) {\n    return node\n  }\n},\n\naddEventListener = function (node: HTMLElement | Window | Document, type: string, listener: (event: Event) => void) {\n  node.addEventListener(type, listener, constant.FALSE)\n},\n\nremoveEventListener = function (node: HTMLElement | Window | Document, type: string, listener: (event: Event) => void) {\n  node.removeEventListener(type, listener, constant.FALSE)\n},\n\n// IE9 不支持 classList\naddElementClass = function (node: HTMLElement, className: string) {\n  node.classList.add(className)\n},\n\nremoveElementClass = function (node: HTMLElement, className: string) {\n  node.classList.remove(className)\n}\n\nif (process.env.NODE_ENV !== 'pure') {\n  if (constant.DOCUMENT) {\n\n    // 此时 document.body 不一定有值，比如 script 放在 head 里\n    if (!constant.DOCUMENT.documentElement.classList) {\n      addElementClass = function (node: HTMLElement, className: string) {\n        const classes = node.className.split(CHAR_WHITESPACE)\n        if (!array.has(classes, className)) {\n          array.push(classes, className)\n          node.className = array.join(classes, CHAR_WHITESPACE)\n        }\n      }\n      removeElementClass = function (node: HTMLElement, className: string) {\n        const classes = node.className.split(CHAR_WHITESPACE)\n        if (array.remove(classes, className)) {\n          node.className = array.join(classes, CHAR_WHITESPACE)\n        }\n      }\n    }\n\n    // 为 IE9 以下浏览器打补丁\n    if (process.env.NODE_LEGACY) {\n\n      if (!constant.DOCUMENT.addEventListener) {\n\n        const PROPERTY_CHANGE = 'propertychange',\n\n        isBoxElement = function (node: HTMLInputElement) {\n          return node.tagName === 'INPUT'\n            && (node.type === 'radio' || node.type === 'checkbox')\n        }\n\n        class IEEvent {\n\n          currentTarget: HTMLElement | Window | Document\n\n          target: HTMLElement | EventTarget\n\n          originalEvent: Event\n\n          constructor(event: Event, element: HTMLElement | Window | Document) {\n\n            object.extend(this, event)\n\n            this.currentTarget = element\n            this.target = event.srcElement || element\n            this.originalEvent = event\n\n          }\n\n          preventDefault() {\n            this.originalEvent.returnValue = constant.FALSE\n          }\n\n          stopPropagation() {\n            this.originalEvent.cancelBubble = constant.TRUE\n          }\n\n        }\n\n        // textContent 不兼容 IE 678\n        innerText = 'innerText'\n\n        createEvent = function (event, element) {\n          return new IEEvent(event, element)\n        }\n\n        findElement = function (selector: string): Element | void {\n          // 去掉 #\n          if (string.codeAt(selector, 0) === 35) {\n            selector = string.slice(selector, 1)\n          }\n          else if (process.env.NODE_ENV === 'development') {\n            logger.fatal(`The id selector, such as \"#id\", is the only supported selector for legacy version.`)\n          }\n          const node = (constant.DOCUMENT as Document).getElementById(selector)\n          if (node) {\n            return node\n          }\n        }\n\n        addEventListener = function (node: any, type: string, listener: (event: Event) => void) {\n          if (type === constant.EVENT_INPUT) {\n            addEventListener(\n              node,\n              PROPERTY_CHANGE,\n              // 借用 EMITTER，反正只是内部临时用一下...\n              listener[EMITTER] = function (event: any) {\n                if (event.propertyName === constant.RAW_VALUE) {\n                  event = new CustomEvent(event)\n                  event.type = constant.EVENT_INPUT\n                  execute(listener, this, event)\n                }\n              }\n            )\n          }\n          else if (type === constant.EVENT_CHANGE && isBoxElement(node)) {\n            addEventListener(\n              node,\n              constant.EVENT_CLICK,\n              listener[EMITTER] = function (event: any) {\n                event = new CustomEvent(event)\n                event.type = constant.EVENT_CHANGE\n                execute(listener, this, event)\n              }\n            )\n          }\n          else {\n            node.attachEvent(`on${type}`, listener)\n          }\n        }\n\n        removeEventListener = function (node: any, type: string, listener: (event: Event) => void) {\n          if (type === constant.EVENT_INPUT) {\n            removeEventListener(node, PROPERTY_CHANGE, listener[EMITTER])\n            delete listener[EMITTER]\n          }\n          else if (type === constant.EVENT_CHANGE && isBoxElement(node)) {\n            removeEventListener(node, constant.EVENT_CLICK, listener[EMITTER])\n            delete listener[EMITTER]\n          }\n          else {\n            node.detachEvent(`on${type}`, listener)\n          }\n        }\n\n      }\n\n    }\n\n  }\n}\n\nconst CHAR_WHITESPACE = ' ',\n\n/**\n * 绑定在 HTML 元素上的事件发射器\n */\nEMITTER = '$emitter',\n\n/**\n * 低版本 IE 上 style 标签的专有属性\n */\nSTYLE_SHEET = 'styleSheet',\n\n/**\n * 跟输入事件配套使用的事件\n */\nCOMPOSITION_START = 'compositionstart',\n\n/**\n * 跟输入事件配套使用的事件\n */\nCOMPOSITION_END = 'compositionend',\n\ndomain = 'http://www.w3.org/',\n\nnamespaces = {\n  svg: domain + '2000/svg',\n  // xml: domain + 'XML/1998/namespace',\n  // xlink: domain + '1999/xlink',\n},\n\nemitterHolders: Record<string, Emitter> = {},\n\nspecialEvents: Record<string, SpecialEventHooks> = {}\n\nspecialEvents[constant.EVENT_MODEL] = {\n  on(node: HTMLElement | Window | Document, listener: NativeListener) {\n    let locked = constant.FALSE\n    on(node, COMPOSITION_START, listener[COMPOSITION_START] = function () {\n      locked = constant.TRUE\n    })\n    on(node, COMPOSITION_END, listener[COMPOSITION_END] = function (event: Event | CustomEvent) {\n      locked = constant.FALSE\n      listener(event)\n    })\n    addEventListener(node, constant.EVENT_INPUT, listener[constant.EVENT_INPUT] = function (event: Event | CustomEvent) {\n      if (!locked) {\n        listener(event)\n      }\n    })\n  },\n  off(node: HTMLElement | Window | Document, listener: NativeListener) {\n    off(node, COMPOSITION_START, listener[COMPOSITION_START])\n    off(node, COMPOSITION_END, listener[COMPOSITION_END])\n    removeEventListener(node, constant.EVENT_INPUT, listener[constant.EVENT_INPUT])\n    listener[COMPOSITION_START] =\n    listener[COMPOSITION_END] =\n    listener[constant.EVENT_INPUT] = constant.UNDEFINED\n  }\n}\n\nexport function createElement(tag: string, isSvg?: boolean): Element {\n  return isSvg\n    ? (constant.DOCUMENT as Document).createElementNS(namespaces.svg, tag)\n    : (constant.DOCUMENT as Document).createElement(tag)\n}\n\nexport function createText(text: string): Text {\n  return (constant.DOCUMENT as Document).createTextNode(text)\n}\n\nexport function createComment(text: string): Comment {\n  return (constant.DOCUMENT as Document).createComment(text)\n}\n\nexport function prop(node: HTMLElement, name: string, value?: string | number | boolean): string | number | boolean | void {\n  if (value !== constant.UNDEFINED) {\n    object.set(node, name, value, constant.FALSE)\n  }\n  else {\n    const holder = object.get(node, name)\n    if (holder) {\n      return holder.value\n    }\n  }\n}\n\nexport function removeProp(node: HTMLElement, name: string): void {\n  object.set(\n    node,\n    name,\n    constant.UNDEFINED\n  )\n}\n\nexport function attr(node: HTMLElement, name: string, value?: string): string | void {\n  if (value !== constant.UNDEFINED) {\n    node.setAttribute(name, value as string)\n  }\n  else {\n    // value 还可能是 null\n    const value = node.getAttribute(name)\n    if (value != constant.NULL) {\n      return value\n    }\n  }\n}\n\nexport function removeAttr(node: HTMLElement, name: string): void {\n  node.removeAttribute(name)\n}\n\nexport function before(parentNode: Node, node: Node, beforeNode: Node): void {\n  parentNode.insertBefore(node, beforeNode)\n}\n\nexport function append(parentNode: Node, node: Node): void {\n  parentNode.appendChild(node)\n}\n\nexport function replace(parentNode: Node, node: Node, oldNode: Node): void {\n  parentNode.replaceChild(node, oldNode)\n}\n\nexport function remove(parentNode: Node, node: Node): void {\n  parentNode.removeChild(node)\n}\n\nexport function parent(node: Node): Node | void {\n  const { parentNode } = node\n  if (parentNode) {\n    return parentNode\n  }\n}\n\nexport function next(node: Node): Node | void {\n  const { nextSibling } = node\n  if (nextSibling) {\n    return nextSibling\n  }\n}\n\nexport const find = findElement\n\nexport function tag(node: Node): string | void {\n  if (node.nodeType === 1) {\n    return string.lower((node as HTMLElement).tagName)\n  }\n}\n\nexport function text(node: Node, text?: string, isStyle?: boolean, isOption?: boolean): string | void {\n  if (text !== constant.UNDEFINED) {\n    if (process.env.NODE_LEGACY) {\n      if (isStyle && object.has(node, STYLE_SHEET)) {\n        node[STYLE_SHEET].cssText = text\n      }\n      else {\n        if (isOption) {\n          (node as HTMLOptionElement).value = text as string\n        }\n        node[innerText] = text as string\n      }\n    }\n    else {\n      node[innerText] = text as string\n    }\n  }\n  else {\n    return node[innerText]\n  }\n}\n\nexport function html(node: Element, html?: string, isStyle?: boolean, isOption?: boolean): string | void {\n  if (html !== constant.UNDEFINED) {\n    if (process.env.NODE_LEGACY) {\n      if (isStyle && object.has(node, STYLE_SHEET)) {\n        node[STYLE_SHEET].cssText = html\n      }\n      else {\n        if (isOption) {\n          (node as HTMLOptionElement).value = html as string\n        }\n        node[innerHTML] = html as string\n      }\n    }\n    else {\n      node[innerHTML] = html as string\n    }\n  }\n  else {\n    return node[innerHTML]\n  }\n}\n\nexport const addClass = addElementClass\n\nexport const removeClass = removeElementClass\n\nexport function on(node: HTMLElement | Window | Document, type: string, listener: Listener, context?: any): void {\n\n  const emitterKey = node[EMITTER] || (node[EMITTER] = ++guid),\n\n  emitter = emitterHolders[emitterKey] || (emitterHolders[emitterKey] = new Emitter()),\n\n  nativeListeners = emitter.nativeListeners || (emitter.nativeListeners = {})\n\n  // 一个元素，相同的事件，只注册一个 native listener\n  if (!nativeListeners[type]) {\n\n    // 特殊事件\n    const special = specialEvents[type],\n\n    // 唯一的原生监听器\n    nativeListener = function (event: Event | CustomEvent) {\n\n      const customEvent = event instanceof CustomEvent\n        ? event\n        : new CustomEvent(event.type, createEvent(event, node))\n\n      if (customEvent.type !== type) {\n        customEvent.type = type\n      }\n\n      emitter.fire(type, [customEvent])\n\n    }\n\n    nativeListeners[type] = nativeListener\n\n    if (special) {\n      special.on(node, nativeListener)\n    }\n    else {\n      addEventListener(node, type, nativeListener)\n    }\n\n  }\n\n  emitter.on(\n    type,\n    {\n      fn: listener,\n      ctx: context,\n    }\n  )\n\n}\n\nexport function off(node: HTMLElement | Window | Document, type: string, listener: Function): void {\n\n  const emitterKey = node[EMITTER],\n\n  emitter = emitterHolders[emitterKey],\n\n  { listeners, nativeListeners } = emitter\n\n  // emitter 会根据 type 和 listener 参数进行适当的删除\n  emitter.off(type, listener)\n\n  // 如果注册的 type 事件都解绑了，则去掉原生监听器\n  if (nativeListeners && !emitter.has(type)) {\n\n    const special = specialEvents[type],\n\n    nativeListener = nativeListeners[type]\n\n    if (special) {\n      special.off(node, nativeListener)\n    }\n    else {\n      removeEventListener(node, type, nativeListener)\n    }\n\n    delete nativeListeners[type]\n\n  }\n\n  if (emitterHolders[emitterKey]\n    && object.falsy(listeners)\n  ) {\n    node[EMITTER] = constant.UNDEFINED\n    delete emitterHolders[emitterKey]\n  }\n\n}\n\nexport function addSpecialEvent(type: string, hooks: SpecialEventHooks): void {\n  if (process.env.NODE_ENV === 'development') {\n    if (specialEvents[type]) {\n      logger.fatal(`The special event \"${type}\" already exists.`)\n    }\n    logger.info(`The special event \"${type}\" is added successfully.`)\n  }\n  specialEvents[type] = hooks\n}\n","import {\n  Watcher,\n  ComputedGetter,\n  ComputedSetter,\n} from 'yox-type/src/type'\n\nimport {\n  WatcherOptions,\n} from 'yox-type/src/options'\n\nimport Observer from './Observer'\n\nimport execute from 'yox-common/src/function/execute'\n\nimport * as array from 'yox-common/src/util/array'\nimport * as object from 'yox-common/src/util/object'\nimport * as constant from 'yox-common/src/util/constant'\n\n/**\n * 计算属性\n *\n * 可配置 cache、deps、get、set 等\n */\nexport default class Computed {\n\n  static current?: Computed\n\n  keypath: string\n\n  value: any\n\n  deps: string[]\n\n  cache: boolean\n\n  fixed: boolean\n\n  context: any\n\n  observer: Observer\n\n  getter: ComputedGetter\n\n  setter: ComputedSetter | void\n\n  watcher: Watcher\n\n  watcherOptions: WatcherOptions\n\n  unique: Record<string, boolean>\n\n  constructor(\n    keypath: string,\n    sync: boolean,\n    cache: boolean,\n    deps: string[],\n    observer: Observer,\n    getter: ComputedGetter,\n    setter: ComputedSetter | void\n  ) {\n\n    const instance = this\n\n    instance.keypath = keypath\n    instance.cache = cache\n\n    instance.deps = deps\n\n    instance.context = observer.context\n    instance.observer = observer\n    instance.getter = getter\n    instance.setter = setter\n\n    instance.unique = {}\n\n    instance.watcher = function ($0: any, $1: any, $2: string) {\n\n      // 计算属性的依赖变了会走进这里\n\n      const oldValue = instance.value,\n      newValue = instance.get(constant.TRUE)\n\n      if (newValue !== oldValue) {\n        observer.diff(keypath, newValue, oldValue)\n      }\n\n    }\n\n    instance.watcherOptions = {\n      sync,\n      watcher: instance.watcher\n    }\n\n    if (instance.fixed = !array.falsy(deps)) {\n      array.each(\n        deps,\n        function (dep) {\n          observer.watch(\n            dep,\n            instance.watcherOptions\n          )\n        }\n      )\n    }\n\n  }\n\n  /**\n   * 读取计算属性的值\n   *\n   * @param force 是否强制刷新缓存\n   */\n  get(force?: boolean): any {\n\n    const instance = this,\n\n    { getter, context } = instance\n\n    // 禁用缓存\n    if (!instance.cache) {\n      instance.value = execute(getter, context)\n    }\n\n    // 减少取值频率，尤其是处理复杂的计算规则\n    else if (force || !object.has(instance, constant.RAW_VALUE)) {\n\n      // 如果写死了依赖，则不需要收集依赖\n      if (instance.fixed) {\n        instance.value = execute(getter, context)\n      }\n      else {\n\n        // 清空上次收集的依赖\n        instance.unbind()\n\n        // 开始收集新的依赖\n        const lastComputed = Computed.current\n        Computed.current = instance\n\n        instance.value = execute(getter, context)\n\n        // 绑定新的依赖\n        instance.bind()\n\n        Computed.current = lastComputed\n      }\n\n    }\n\n    return instance.value\n  }\n\n  set(value: any): void {\n    const { setter, context } = this\n    if (setter) {\n      setter.call(context, value)\n    }\n  }\n\n  /**\n   * 添加依赖\n   *\n   * 这里只是为了保证依赖唯一，最后由 bind() 实现绑定\n   *\n   * @param dep\n   */\n  add(dep: string): void {\n    this.unique[dep] = constant.TRUE\n  }\n\n  /**\n   * 绑定依赖\n   */\n  bind(): void {\n\n    const { unique, deps, observer, watcherOptions } = this\n\n    object.each(\n      unique,\n      function (_: any, dep: string) {\n        array.push(deps, dep)\n        observer.watch(\n          dep,\n          watcherOptions\n        )\n      }\n    )\n\n    // 用完重置\n    // 方便下次收集依赖\n    this.unique = {}\n\n  }\n\n  /**\n   * 解绑依赖\n   */\n  unbind(): void {\n\n    const { deps, observer, watcher } = this\n\n    array.each(\n      deps,\n      function (dep) {\n        observer.unwatch(dep, watcher)\n      },\n      constant.TRUE\n    )\n\n    deps.length = 0\n\n  }\n\n}","import * as array from 'yox-common/src/util/array'\nimport * as string from 'yox-common/src/util/string'\nimport * as constant from 'yox-common/src/util/constant'\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\n/**\n * 从 keypath 数组中选择和 keypath 最匹配的那一个\n *\n * @param sorted 经过排序的 keypath 数组\n * @param keypath\n */\nexport default function (sorted: string[], keypath: string): any {\n\n  let result: any\n\n  array.each(\n    sorted,\n    function (prefix) {\n      const length = keypathUtil.match(keypath, prefix)\n      if (length >= 0) {\n        result = {\n          name: prefix,\n          prop: string.slice(keypath, length)\n        }\n        return constant.FALSE\n      }\n    }\n  )\n\n  return result\n\n}","import * as object from 'yox-common/src/util/object'\nimport * as constant from 'yox-common/src/util/constant'\n\nexport default function (source: any, keypath: string): any {\n\n  if (source == constant.NULL || keypath === constant.EMPTY_STRING) {\n    return source\n  }\n\n  const result = object.get(source, keypath)\n  if (result) {\n    return result.value\n  }\n\n}","import * as is from 'yox-common/src/util/is'\nimport * as constant from 'yox-common/src/util/constant'\n\n/**\n * 对比新旧数组\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n): true | void {\n\n  const newIsString = is.string(newValue),\n\n  oldIsString = is.string(oldValue)\n\n  if (newIsString || oldIsString) {\n    callback(\n      constant.RAW_LENGTH,\n      newIsString ? newValue.length : constant.UNDEFINED,\n      oldIsString ? oldValue.length : constant.UNDEFINED\n    )\n    return constant.TRUE\n  }\n\n}","import * as is from 'yox-common/src/util/is'\nimport * as constant from 'yox-common/src/util/constant'\n\n/**\n * 对比新旧数组\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n): true | void {\n\n  const newIsArray = is.array(newValue),\n\n  oldIsArray = is.array(oldValue)\n\n  if (newIsArray || oldIsArray) {\n\n    const newLength = newIsArray ? newValue.length : constant.UNDEFINED,\n\n    oldLength = oldIsArray ? oldValue.length : constant.UNDEFINED\n\n    callback(\n      constant.RAW_LENGTH,\n      newLength,\n      oldLength\n    )\n\n    for (let i = 0, length = Math.max(newLength || 0, oldLength || 0); i < length; i++) {\n      callback(\n        '' + i,\n        newValue ? newValue[i] : constant.UNDEFINED,\n        oldValue ? oldValue[i] : constant.UNDEFINED\n      )\n    }\n\n    return constant.TRUE\n\n  }\n\n}","import * as is from 'yox-common/src/util/is'\nimport * as object from 'yox-common/src/util/object'\nimport * as constant from 'yox-common/src/util/constant'\n\n/**\n * 对比新旧对象\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n) {\n\n  const newIsObject = is.object(newValue),\n\n  oldIsObject = is.object(oldValue)\n\n  if (newIsObject || oldIsObject) {\n\n    newValue = newIsObject ? newValue : constant.EMPTY_OBJECT\n    oldValue = oldIsObject ? oldValue : constant.EMPTY_OBJECT\n\n    if (newIsObject) {\n      object.each(\n        newValue,\n        function (value: any, key: string) {\n          if (value !== oldValue[key]) {\n            callback(key, value, oldValue[key])\n          }\n        }\n      )\n    }\n\n    if (oldIsObject) {\n      object.each(\n        oldValue,\n        function (value: any, key: string) {\n          if (value !== newValue[key]) {\n            callback(key, newValue[key], value)\n          }\n        }\n      )\n    }\n\n  }\n\n}","import * as array from 'yox-common/src/util/array'\nimport * as constant from 'yox-common/src/util/constant'\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\nimport diffString from './diffString'\nimport diffArray from './diffArray'\nimport diffObject from './diffObject'\n\nexport default function diffRecursion(\n  keypath: string,\n  newValue: any,\n  oldValue: any,\n  watchFuzzyKeypaths: string[],\n  callback: (watchKeypath: string, keypath: string, newValue: any, oldValue: any) => void\n) {\n\n  const diff = function (subKeypath: string, subNewValue: any, subOldValue: any) {\n\n    if (subNewValue !== subOldValue) {\n\n      const newKeypath = keypathUtil.join(keypath, subKeypath)\n\n      array.each(\n        watchFuzzyKeypaths,\n        function (fuzzyKeypath) {\n          if (keypathUtil.matchFuzzy(newKeypath, fuzzyKeypath) !== constant.UNDEFINED) {\n            callback(\n              fuzzyKeypath, newKeypath, subNewValue, subOldValue\n            )\n          }\n        }\n      )\n\n      diffRecursion(newKeypath, subNewValue, subOldValue, watchFuzzyKeypaths, callback)\n\n    }\n\n  }\n\n  diffString(newValue, oldValue, diff)\n    || diffArray(newValue, oldValue, diff)\n    || diffObject(newValue, oldValue, diff)\n\n}","import * as array from 'yox-common/src/util/array'\nimport * as object from 'yox-common/src/util/object'\nimport * as string from 'yox-common/src/util/string'\nimport * as constant from 'yox-common/src/util/constant'\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\nimport readValue from './readValue'\nimport diffRecursion from './diffRecursion'\n\nexport default function (\n  keypath: string,\n  newValue: any,\n  oldValue: any,\n  watcher: object, isRecursive: boolean,\n  callback: (watchKeypath: string, keypath: string, newValue: any, oldValue: any) => void\n) {\n\n  let fuzzyKeypaths: string[] | undefined\n\n  // 遍历监听的 keypath，如果未被监听，则无需触发任何事件\n  object.each(\n    watcher,\n    function (_, watchKeypath) {\n\n      // 模糊监听，如 users.*.name\n      if (keypathUtil.isFuzzy(watchKeypath)) {\n\n        // 如果当前修改的是 users.0 整个对象\n        // users.0 和 users.*.name 无法匹配\n        // 此时要知道设置 users.0 到底会不会改变 users.*.name 需要靠递归了\n\n        // 如果匹配，则无需递归\n        if (keypathUtil.matchFuzzy(keypath, watchKeypath) !== constant.UNDEFINED) {\n          callback(\n            watchKeypath, keypath, newValue, oldValue\n          )\n        }\n        else if (isRecursive) {\n          if (fuzzyKeypaths) {\n            array.push(\n              fuzzyKeypaths,\n              watchKeypath\n            )\n          }\n          else {\n            fuzzyKeypaths = [watchKeypath]\n          }\n        }\n\n        return\n      }\n\n      // 不是模糊匹配，直接靠前缀匹配\n      // 比如监听的是 users.0.name，此时修改 users.0，则直接读出子属性值，判断是否相等\n      const length = keypathUtil.match(watchKeypath, keypath)\n      if (length >= 0) {\n\n        const subKeypath = string.slice(watchKeypath, length),\n        subNewValue = readValue(newValue, subKeypath),\n        subOldValue = readValue(oldValue, subKeypath)\n\n        if (subNewValue !== subOldValue) {\n          callback(\n            watchKeypath, watchKeypath, subNewValue, subOldValue\n          )\n        }\n\n      }\n\n    }\n  )\n\n  // 存在模糊匹配的需求\n  // 必须对数据进行递归\n  // 性能确实会慢一些，但是很好用啊，几乎可以监听所有的数据\n  if (fuzzyKeypaths) {\n    diffRecursion(keypath, newValue, oldValue, fuzzyKeypaths, callback)\n  }\n\n}","import {\n  EmitterOptions,\n} from 'yox-type/src/options'\n\n/**\n * 触发异步变化时，用此函数过滤下，哪些 listener 应该执行\n *\n * @param item\n * @param data\n */\nexport default function (_: any, args: any[] | void, options: EmitterOptions): boolean | void {\n\n  if (options.count && args) {\n\n    // 采用计数器的原因是，同一个 options 可能执行多次\n    // 比如监听 user.*，如果同批次修改了 user.name 和 user.age\n    // 这个监听器会调用多次，如果第一次执行就把 count 干掉了，第二次就无法执行了\n\n    options.count--\n\n    // 新旧值不相等\n    return args[0] !== args[1]\n\n  }\n\n}","import {\n  Watcher,\n} from 'yox-type/src/type'\n\nimport {\n  WatcherOptions,\n} from 'yox-type/src/options'\n\nimport * as is from 'yox-common/src/util/is'\nimport * as logger from 'yox-common/src/util/logger'\nimport * as constant from 'yox-common/src/util/constant'\n\n// 避免频繁创建对象\nconst optionsHolder: WatcherOptions = {\n  watcher: constant.EMPTY_FUNCTION\n}\n\n/**\n * 格式化 watch options\n *\n * @param options\n */\nexport default function (options: Watcher | WatcherOptions | void, immediate: boolean | void): WatcherOptions | void {\n\n  if (is.func(options)) {\n    optionsHolder.watcher = options as Watcher\n    optionsHolder.immediate = immediate === constant.TRUE\n    return optionsHolder\n  }\n\n  if (options && (options as WatcherOptions).watcher) {\n    return options as WatcherOptions\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    logger.fatal(`watcher should be a function or object.`)\n  }\n\n}","import {\n  Data,\n  Watcher,\n  ValueHolder,\n  ComputedGetter,\n  ComputedSetter,\n} from 'yox-type/src/type'\n\nimport {\n  WatcherOptions,\n  ComputedOptions,\n  EmitterOptions,\n} from 'yox-type/src/options'\n\nimport * as is from 'yox-common/src/util/is'\nimport * as array from 'yox-common/src/util/array'\nimport * as object from 'yox-common/src/util/object'\nimport * as string from 'yox-common/src/util/string'\nimport * as constant from 'yox-common/src/util/constant'\n\nimport toNumber from 'yox-common/src/function/toNumber'\nimport execute from 'yox-common/src/function/execute'\nimport Emitter from 'yox-common/src/util/Emitter'\nimport NextTask from 'yox-common/src/util/NextTask'\n\nimport Computed from './Computed'\nimport matchBest from './function/matchBest'\nimport diffWatcher from './function/diffWatcher'\nimport filterWatcher from './function/filterWatcher'\nimport formatWatcherOptions from './function/formatWatcherOptions'\n\ninterface AsyncChange {\n\n  // 旧值\n  value: any\n\n  // 监听的 keypath\n  keypaths: string[]\n\n}\n\n/**\n * 观察者有两种观察模式：\n *\n * 1. 同步监听\n * 2. 异步监听\n *\n * 对于`计算属性`这种需要实时变化的对象，即它的依赖变了，它需要立即跟着变，否则会出现不一致的问题\n * 这种属于同步监听\n *\n * 对于外部调用 observer.watch('keypath', listener)，属于异步监听，它只关心是否变了，而不关心是否是立即触发的\n */\nexport default class Observer {\n\n  data: Data\n\n  context: any\n\n  nextTask: NextTask\n\n  computed?: Record<string, Computed>\n\n  reversedComputedKeys?: string[]\n\n  syncEmitter: Emitter\n\n  asyncEmitter: Emitter\n\n  asyncChanges: Record<string, AsyncChange>\n\n  pending?: boolean\n\n  constructor(data?: Data, context?: any) {\n\n    const instance = this\n\n    instance.data = data || {}\n    instance.context = context || instance\n    instance.nextTask = new NextTask()\n\n    instance.syncEmitter = new Emitter()\n    instance.asyncEmitter = new Emitter()\n    instance.asyncChanges = {}\n\n  }\n\n  /**\n   * 获取数据\n   *\n   * @param keypath\n   * @param defaultValue\n   * @param depIgnore\n   * @return\n   */\n  get(\n    keypath: string,\n    defaultValue?: any,\n    depIgnore?: boolean\n  ): any {\n\n    const instance = this,\n\n    currentComputed = Computed.current,\n\n    { data, computed, reversedComputedKeys } = instance\n\n    // 传入 '' 获取整个 data\n    if (keypath === constant.EMPTY_STRING) {\n      return data\n    }\n\n    // 调用 get 时，外面想要获取依赖必须设置是谁在收集依赖\n    // 如果没设置，则跳过依赖收集\n    if (currentComputed && !depIgnore) {\n      currentComputed.add(keypath)\n    }\n\n    let result: ValueHolder | void, target: Computed | void\n\n    if (computed) {\n      target = computed[keypath]\n      if (target) {\n        return target.get()\n      }\n      if (reversedComputedKeys) {\n        const match = matchBest(reversedComputedKeys, keypath)\n        if (match && match.prop) {\n          result = object.get(\n            computed[match.name].get(),\n            match.prop\n          )\n        }\n      }\n    }\n\n    if (!result) {\n      result = object.get(data, keypath)\n    }\n\n    return result ? result.value : defaultValue\n\n  }\n\n  /**\n   * 更新数据\n   *\n   * @param keypath\n   * @param value\n   */\n  set(\n    keypath: string | Data,\n    value?: any\n  ) {\n\n    const instance = this,\n\n    { data, computed, reversedComputedKeys } = instance,\n\n    setValue = function (newValue: any, keypath: string) {\n\n      const oldValue = instance.get(keypath)\n      if (newValue === oldValue) {\n        return\n      }\n\n      let target: Computed | void\n\n      if (computed) {\n        target = computed[keypath]\n        if (target) {\n          target.set(newValue)\n        }\n        if (reversedComputedKeys) {\n          const match = matchBest(reversedComputedKeys, keypath)\n          if (match && match.prop) {\n            target = computed[match.name]\n            if (target) {\n              const targetValue = target.get()\n              if (is.object(targetValue)) {\n                object.set(targetValue, match.prop, newValue)\n              }\n            }\n          }\n        }\n      }\n\n      if (!target) {\n        object.set(data, keypath, newValue)\n      }\n\n      instance.diff(keypath, newValue, oldValue)\n\n    }\n\n    if (is.string(keypath)) {\n      setValue(value, keypath as string)\n    }\n    else if (is.object(keypath)) {\n      object.each(keypath as Data, setValue)\n    }\n\n  }\n\n  /**\n   * 同步调用的 diff，用于触发 syncEmitter，以及唤醒 asyncEmitter\n   *\n   * @param keypath\n   * @param newValue\n   * @param oldValue\n   */\n  diff(\n    keypath: string,\n    newValue: any,\n    oldValue: any\n  ): void {\n\n    const instance = this,\n\n    { syncEmitter, asyncEmitter, asyncChanges } = instance,\n\n    /**\n     * 我们认为 $ 开头的变量是不可递归的\n     * 比如浏览器中常见的 $0 表示当前选中元素\n     * DOM 元素是不能递归的\n     */\n    isRecursive = string.codeAt(keypath) !== 36\n\n    diffWatcher(\n      keypath, newValue, oldValue,\n      syncEmitter.listeners, isRecursive,\n      function (watchKeypath: string, keypath: string, newValue: any, oldValue: any) {\n        syncEmitter.fire(watchKeypath, [newValue, oldValue, keypath])\n      }\n    )\n\n    /**\n     * 此处有坑，举个例子\n     *\n     * observer.watch('a', function () {})\n     *\n     * observer.set('a', 1)\n     *\n     * observer.watch('a', function () {})\n     *\n     * 这里，第一个 watcher 应该触发，但第二个不应该，因为它绑定监听时，值已经是最新的了\n     */\n\n    diffWatcher(\n      keypath, newValue, oldValue,\n      asyncEmitter.listeners, isRecursive,\n      function (watchKeypath: string, keypath: string, newValue: any, oldValue: any) {\n\n        array.each(\n          asyncEmitter.listeners[watchKeypath],\n          function (item) {\n            (item.count as number)++\n          }\n        )\n\n        const { keypaths } = asyncChanges[keypath] || (asyncChanges[keypath] = { value: oldValue, keypaths: [] })\n        if (!array.has(keypaths, watchKeypath)) {\n          array.push(keypaths, watchKeypath)\n        }\n\n        if (!instance.pending) {\n          instance.pending = constant.TRUE\n          instance.nextTask.append(\n            function () {\n              if (instance.pending) {\n                instance.pending = constant.UNDEFINED\n                instance.diffAsync()\n              }\n            }\n          )\n        }\n      }\n    )\n\n  }\n\n  /**\n   * 异步触发的 diff\n   */\n  diffAsync(): void {\n\n    const instance = this,\n\n    { asyncEmitter, asyncChanges } = instance\n\n    instance.asyncChanges = {}\n\n    object.each(\n      asyncChanges,\n      function (change: AsyncChange, keypath: string) {\n\n        const args = [instance.get(keypath), change.value, keypath]\n\n        // 不能在这判断新旧值是否相同，相同就不 fire\n        // 因为前面标记了 count，在这中断会导致 count 无法清除\n\n        array.each(\n          change.keypaths,\n          function (watchKeypath) {\n            asyncEmitter.fire(watchKeypath, args, filterWatcher)\n          }\n        )\n\n      }\n    )\n\n  }\n\n  /**\n   * 添加计算属性\n   *\n   * @param keypath\n   * @param computed\n   */\n  addComputed(\n    keypath: string,\n    options: ComputedGetter | ComputedOptions\n  ): Computed | void {\n\n    let cache = constant.TRUE,\n\n    sync = constant.TRUE,\n\n    deps: string[] = [],\n\n    getter: ComputedGetter | void,\n\n    setter: ComputedSetter | void\n\n    if (is.func(options)) {\n      getter = options as ComputedGetter\n    }\n    else if (is.object(options)) {\n      const computedOptions = options as ComputedOptions\n      if (is.boolean(computedOptions.cache)) {\n        cache = computedOptions.cache as boolean\n      }\n      if (is.boolean(computedOptions.sync)) {\n        sync = computedOptions.sync as boolean\n      }\n      // 因为可能会修改 deps，所以这里创建一个新的 deps，避免影响外部传入的 deps\n      if (is.array(computedOptions.deps)) {\n        deps = object.copy(computedOptions.deps)\n      }\n      if (is.func(computedOptions.get)) {\n        getter = computedOptions.get\n      }\n      if (is.func(computedOptions.set)) {\n        setter = computedOptions.set\n      }\n    }\n\n    if (getter) {\n\n      const instance = this,\n\n      computed = new Computed(keypath, sync, cache, deps, instance, getter, setter)\n\n      if (!instance.computed) {\n        instance.computed = {}\n      }\n\n      instance.computed[keypath] = computed\n      instance.reversedComputedKeys = object.sort(instance.computed, constant.TRUE)\n\n      return computed\n\n    }\n\n  }\n\n  /**\n   * 移除计算属性\n   *\n   * @param keypath\n   */\n  removeComputed(\n    keypath: string\n  ): void {\n\n    const instance = this,\n\n    { computed } = instance\n\n    if (computed && object.has(computed, keypath)) {\n      delete computed[keypath]\n      instance.reversedComputedKeys = object.sort(computed, constant.TRUE)\n    }\n\n  }\n\n  /**\n   * 监听数据变化\n   *\n   * @param keypath\n   * @param watcher\n   * @param immediate\n   */\n  watch(\n    keypath: string | Record<string, Watcher | WatcherOptions>,\n    watcher?: Watcher | WatcherOptions,\n    immediate?: boolean\n  ) {\n\n    const instance = this,\n\n    { context, syncEmitter, asyncEmitter } = instance,\n\n    bind = function (keypath: string, options: WatcherOptions) {\n\n      const emitter = options.sync ? syncEmitter : asyncEmitter,\n\n      // formatWatcherOptions 保证了 options.watcher 一定存在\n      listener: EmitterOptions = {\n        fn: options.watcher,\n        ctx: context,\n        count: 0,\n      }\n\n      if (options.once) {\n        listener.max = 1\n      }\n\n      emitter.on(keypath, listener)\n\n      if (options.immediate) {\n        execute(\n          options.watcher,\n          context,\n          [\n            instance.get(keypath),\n            constant.UNDEFINED,\n            keypath\n          ]\n        )\n      }\n\n    }\n\n    if (is.string(keypath)) {\n      bind(\n        keypath as string,\n        formatWatcherOptions(watcher, immediate) as WatcherOptions\n      )\n      return\n    }\n\n    object.each(\n      keypath as Data,\n      function (options: Watcher | WatcherOptions, keypath: string) {\n        bind(keypath, formatWatcherOptions(options) as WatcherOptions)\n      }\n    )\n\n  }\n\n  /**\n   * 取消监听数据变化\n   *\n   * @param keypath\n   * @param watcher\n   */\n  unwatch(\n    keypath?: string,\n    watcher?: Watcher\n  ) {\n    this.syncEmitter.off(keypath, watcher)\n    this.asyncEmitter.off(keypath, watcher)\n  }\n\n  /**\n   * 取反 keypath 对应的数据\n   *\n   * 不管 keypath 对应的数据是什么类型，操作后都是布尔型\n   *\n   * @param keypath\n   * @return 取反后的布尔值\n   */\n  toggle(keypath: string): boolean {\n    const value = !this.get(keypath)\n    this.set(keypath, value)\n    return value\n  }\n\n  /**\n   * 递增 keypath 对应的数据\n   *\n   * 注意，最好是整型的加法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递增\n   * @param step 步进值，默认是 1\n   * @param max 可以递增到的最大值，默认不限制\n   */\n  increase(keypath: string, step?: number, max?: number): number | void {\n    const value = toNumber(this.get(keypath), 0) + (step || 1)\n    if (!is.number(max) || value <= (max as number)) {\n      this.set(keypath, value)\n      return value\n    }\n  }\n\n  /**\n   * 递减 keypath 对应的数据\n   *\n   * 注意，最好是整型的减法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递减\n   * @param step 步进值，默认是 1\n   * @param min 可以递减到的最小值，默认不限制\n   */\n  decrease(keypath: string, step?: number, min?: number): number | void {\n    const value = toNumber(this.get(keypath), 0) - (step || 1)\n    if (!is.number(min) || value >= (min as number)) {\n      this.set(keypath, value)\n      return value\n    }\n  }\n\n  /**\n   * 在数组指定位置插入元素\n   *\n   * @param keypath\n   * @param item\n   * @param index\n   */\n  insert(keypath: string, item: any, index: number | boolean): true | void {\n\n    let list = this.get(keypath)\n    list = !is.array(list) ? [] : object.copy(list)\n\n    const { length } = list\n    if (index === constant.TRUE || index === length) {\n      list.push(item)\n    }\n    else if (index === constant.FALSE || index === 0) {\n      list.unshift(item)\n    }\n    else if (index > 0 && index < length) {\n      list.splice(index, 0, item)\n    }\n    else {\n      return\n    }\n\n    this.set(keypath, list)\n\n    return constant.TRUE\n\n  }\n\n  /**\n   * 在数组尾部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  append(keypath: string, item: any): true | void {\n    return this.insert(keypath, item, constant.TRUE)\n  }\n\n  /**\n   * 在数组首部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  prepend(keypath: string, item: any): true | void {\n    return this.insert(keypath, item, constant.FALSE)\n  }\n\n  /**\n   * 通过索引移除数组中的元素\n   *\n   * @param keypath\n   * @param index\n   */\n  removeAt(keypath: string, index: number): true | void {\n    let list = this.get(keypath)\n    if (is.array(list)\n      && index >= 0\n      && index < list.length\n    ) {\n      list = object.copy(list)\n      list.splice(index, 1)\n      this.set(keypath, list)\n      return constant.TRUE\n    }\n  }\n\n  /**\n   * 直接移除数组中的元素\n   *\n   * @param keypath\n   * @param item\n   */\n  remove(keypath: string, item: any): true | void {\n    let list = this.get(keypath)\n    if (is.array(list)) {\n      list = object.copy(list)\n      if (array.remove(list, item)) {\n        this.set(keypath, list)\n        return constant.TRUE\n      }\n    }\n  }\n\n  /**\n   * 拷贝任意数据，支持深拷贝\n   *\n   * @param data\n   * @param deep\n   */\n  copy<T>(data: T, deep?: boolean): T {\n    return object.copy(data, deep)\n  }\n\n  /**\n   * 销毁\n   */\n  destroy() {\n    const instance = this\n    instance.syncEmitter.off()\n    instance.asyncEmitter.off()\n    instance.nextTask.clear()\n    object.clear(instance)\n  }\n\n}\n","import execute from './execute'\n\nimport * as array from '../util/array'\nimport * as constant from '../util/constant'\n\n/**\n * 节流调用\n *\n * @param fn 需要节制调用的函数\n * @param delay 调用的时间间隔，单位毫秒\n * @param immediate 是否立即触发\n * @return 节流函数\n */\nexport default function (fn: Function, delay: number, immediate?: boolean) {\n\n  let timer: any\n\n  return function () {\n\n    if (!timer) {\n\n      const args = array.toArray(arguments)\n      if (immediate) {\n        execute(fn, constant.UNDEFINED, args)\n      }\n\n      timer = setTimeout(\n        function () {\n          timer = constant.UNDEFINED\n          if (!immediate) {\n            execute(fn, constant.UNDEFINED, args)\n          }\n        },\n        delay\n      )\n\n    }\n\n  }\n}\n","import {\n  Listener,\n} from 'yox-type/src/type'\n\nimport {\n  VNode,\n  Directive,\n} from 'yox-type/src/vnode'\n\nimport {\n  YoxInterface,\n} from 'yox-type/src/yox'\n\nimport {\n  MODIFER_NATIVE,\n} from 'yox-config/src/config'\n\nimport execute from 'yox-common/src/function/execute'\nimport debounce from 'yox-common/src/function/debounce'\n\nimport * as constant from 'yox-common/src/util/constant'\n\nimport * as domApi from 'yox-dom/src/dom'\n\n\nexport function bind(node: HTMLElement | YoxInterface, directive: Directive, vnode: VNode) {\n\n  let { key, name, modifier, handler } = directive, { lazy } = vnode\n\n  if (!handler) {\n    return\n  }\n\n  if (lazy) {\n\n    const value = lazy[name] || lazy[constant.EMPTY_STRING]\n\n    if (value === constant.TRUE) {\n      name = constant.EVENT_CHANGE\n    }\n    else if (value > 0) {\n      handler = debounce(\n        handler,\n        value,\n        // 避免连续多次点击，主要用于提交表单场景\n        // 移动端的 tap 事件可自行在业务层打补丁实现\n        name === constant.EVENT_CLICK || name === constant.EVENT_TAP\n      )\n    }\n\n  }\n\n  let element: HTMLElement\n\n  if (vnode.isComponent) {\n    const component = node as YoxInterface\n\n    if (modifier === MODIFER_NATIVE) {\n      element = component.$el as HTMLElement\n\n      domApi.on(element, name, handler)\n      vnode.data[key] = function () {\n        domApi.off(element, name, handler as Listener)\n      }\n    }\n    else {\n      // 还原命名空间\n      if (modifier) {\n        name += constant.RAW_DOT + modifier\n      }\n      component.on(name, handler)\n      vnode.data[key] = function () {\n        component.off(name, handler as Listener)\n      }\n    }\n  }\n  else {\n    element = node as HTMLElement\n\n    domApi.on(element, name, handler)\n    vnode.data[key] = function () {\n      domApi.off(element, name, handler as Listener)\n    }\n  }\n\n}\n\nexport function unbind(node: HTMLElement | YoxInterface, directive: Directive, vnode: VNode) {\n  execute(vnode.data[directive.key])\n}\n\n","import {\n  Watcher,\n  LazyValue,\n} from 'yox-type/src/type'\n\nimport {\n  VNode,\n  Directive,\n} from 'yox-type/src/vnode'\n\nimport {\n  YoxInterface,\n} from 'yox-type/src/yox'\n\nimport {\n  DIRECTIVE_MODEL,\n} from 'yox-config/src/config'\n\nimport debounce from 'yox-common/src/function/debounce'\nimport execute from 'yox-common/src/function/execute'\nimport toString from 'yox-common/src/function/toString'\n\nimport * as is from 'yox-common/src/util/is'\nimport * as array from 'yox-common/src/util/array'\nimport * as constant from 'yox-common/src/util/constant'\n\nimport * as domApi from 'yox-dom/src/dom'\n\n\ninterface NativeControl {\n\n  set(node: HTMLElement, value: any): void\n\n  sync(node: HTMLElement, keypath: string, context: YoxInterface): void\n\n  name: string\n\n}\n\nfunction debounceIfNeeded<T extends Function>(fn: T, lazy: LazyValue | void): T {\n  // 应用 lazy\n  return lazy && lazy !== constant.TRUE\n    ? debounce(fn as Function, lazy) as any\n    : fn\n}\n\nconst inputControl: NativeControl = {\n  set(node: HTMLInputElement, value: any) {\n    node.value = toString(value)\n  },\n  sync(node: HTMLInputElement, keypath: string, context: YoxInterface) {\n    context.set(keypath, node.value)\n  },\n  name: constant.RAW_VALUE\n},\n\nradioControl: NativeControl = {\n  set(node: HTMLInputElement, value: any) {\n    node.checked = node.value === toString(value)\n  },\n  sync(node: HTMLInputElement, keypath: string, context: YoxInterface) {\n    if (node.checked) {\n      context.set(keypath, node.value)\n    }\n  },\n  name: 'checked'\n},\n\ncheckboxControl: NativeControl = {\n  set(node: HTMLInputElement, value: any) {\n    node.checked = is.array(value)\n      ? array.has(value, node.value, constant.FALSE)\n      : !!value\n  },\n  sync(node: HTMLInputElement, keypath: string, context: YoxInterface) {\n    const value = context.get(keypath)\n    if (is.array(value)) {\n      if (node.checked) {\n        context.append(keypath, node.value)\n      }\n      else {\n        context.removeAt(\n          keypath,\n          array.indexOf(value, node.value, constant.FALSE)\n        )\n      }\n    }\n    else {\n      context.set(keypath, node.checked)\n    }\n  },\n  name: 'checked'\n},\n\nselectControl: NativeControl = {\n  set(node: HTMLSelectElement, value: any) {\n    array.each(\n      array.toArray(node.options),\n      node.multiple\n        ? function (option) {\n          option.selected = array.has(value, option.value, constant.FALSE)\n        }\n        : function (option, index) {\n          if (option.value == value) {\n            node.selectedIndex = index\n            return constant.FALSE\n          }\n        }\n    )\n  },\n  sync(node: HTMLSelectElement, keypath: string, context: YoxInterface) {\n    const { options } = node\n    if (node.multiple) {\n      const values: string[] = []\n      array.each(\n        array.toArray(options),\n        function (option) {\n          if (option.selected) {\n            array.push(\n              values,\n              option.value\n            )\n          }\n        }\n      )\n      context.set(keypath, values)\n    }\n    else {\n      context.set(\n        keypath,\n        options[node.selectedIndex].value\n      )\n    }\n  },\n  name: constant.RAW_VALUE\n}\n\nexport const once = constant.TRUE\n\nexport function bind(node: HTMLElement | YoxInterface, directive: Directive, vnode: VNode) {\n\n  let { context, lazy, isComponent } = vnode,\n\n  dataBinding = directive.modifier as string,\n\n  lazyValue = lazy && (lazy[DIRECTIVE_MODEL] || lazy[constant.EMPTY_STRING]),\n\n  set: Watcher | void,\n\n  unbind: Function\n\n  if (isComponent) {\n\n    let component = node as YoxInterface,\n\n    viewBinding = component.$model as string,\n\n    viewSyncing = debounceIfNeeded(\n      function (newValue: any) {\n        context.set(dataBinding, newValue)\n      },\n      lazyValue\n    )\n\n    set = function (newValue: any) {\n      if (set) {\n        component.set(viewBinding, newValue)\n      }\n    }\n\n    unbind = function () {\n      component.unwatch(viewBinding, viewSyncing)\n    }\n\n    component.watch(viewBinding, viewSyncing)\n\n  }\n  else {\n\n    let element = node as HTMLElement,\n\n    control = vnode.tag === 'select'\n      ? selectControl\n      : inputControl,\n\n    // checkbox,radio,select 监听的是 change 事件\n    eventName = constant.EVENT_CHANGE\n\n    if (control === inputControl) {\n      const type = (node as HTMLInputElement).type\n      if (type === 'radio') {\n        control = radioControl\n      }\n      else if (type === 'checkbox') {\n        control = checkboxControl\n      }\n      // 如果是输入框，则切换成 model 事件\n      // model 事件是个 yox-dom 实现的特殊事件\n      // 不会在输入法组合文字过程中得到触发事件\n      else if (lazyValue !== constant.TRUE) {\n        eventName = constant.EVENT_MODEL\n      }\n    }\n\n    set = function (newValue: any) {\n      if (set) {\n        control.set(element, newValue)\n      }\n    }\n\n    const sync = debounceIfNeeded(\n      function () {\n        control.sync(element, dataBinding, context)\n      },\n      lazyValue\n    )\n\n    unbind = function () {\n      domApi.off(element, eventName, sync)\n    }\n\n    domApi.on(element, eventName, sync)\n\n    control.set(element, directive.value)\n\n  }\n\n  // 监听数据，修改界面\n  context.watch(dataBinding, set as Watcher)\n\n  vnode.data[directive.key] = function () {\n    context.unwatch(dataBinding, set as Watcher)\n    set = constant.UNDEFINED\n    unbind()\n  }\n\n}\n\nexport function unbind(node: HTMLElement | YoxInterface, directive: Directive, vnode: VNode) {\n  execute(vnode.data[directive.key])\n}\n","import {\n  Watcher,\n} from 'yox-type/src/type'\n\nimport {\n  VNode,\n  Directive,\n} from 'yox-type/src/vnode'\n\nimport {\n  YoxInterface,\n} from 'yox-type/src/yox'\n\nimport execute from 'yox-common/src/function/execute'\n\nimport * as constant from 'yox-common/src/util/constant'\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\nimport * as domApi from 'yox-dom/src/dom'\n\nexport const once = constant.TRUE\n\nexport function bind(node: HTMLElement | YoxInterface, directive: Directive, vnode: VNode) {\n\n  // binding 可能是模糊匹配\n  // 比如延展属性 {{...obj}}，这里 binding 会是 `obj.*`\n  let binding = directive.modifier as string,\n\n  // 提前判断好是否是模糊匹配，避免 watcher 频繁执行判断逻辑\n  isFuzzy = keypathUtil.isFuzzy(binding),\n\n  watcher: Watcher | void = function (newValue: any, _: any, keypath: string) {\n\n    if (watcher) {\n      const name = isFuzzy\n        ? keypathUtil.matchFuzzy(keypath, binding) as string\n        : directive.name\n\n      if (vnode.isComponent) {\n        const component = node as YoxInterface\n        component.checkProp(name, newValue)\n        component.set(name, newValue)\n      }\n      else {\n        const element = node as HTMLElement\n        if (directive.hint !== constant.UNDEFINED) {\n          domApi.prop(element, name, newValue)\n        }\n        else {\n          domApi.attr(element, name, newValue)\n        }\n      }\n    }\n\n  }\n\n  vnode.context.watch(binding, watcher as Watcher)\n\n  vnode.data[directive.key] = function () {\n    vnode.context.unwatch(binding, watcher as Watcher)\n    watcher = constant.UNDEFINED\n  }\n\n}\n\nexport function unbind(node: HTMLElement | YoxInterface, directive: Directive, vnode: VNode) {\n  execute(vnode.data[directive.key])\n}\n\n","import {\n  Data,\n  Filter,\n  Partial,\n  ThisTask,\n  ThisWatcher,\n  ThisListener,\n  Component,\n  ComponentCallback,\n  ComponentLoader,\n  PropTypeFunction,\n  PropValueFunction,\n  PropRule,\n} from 'yox-type/src/type'\n\nimport {\n  VNode,\n} from 'yox-type/src/vnode'\n\nimport {\n  DirectiveHooks,\n  TransitionHooks,\n} from 'yox-type/src/hooks'\n\nimport {\n  EmitterOptions,\n  ComponentOptions,\n  ThisWatcherOptions,\n} from 'yox-type/src/options'\n\nimport {\n  YoxInterface,\n} from 'yox-type/src/yox'\n\nimport {\n  IsApi,\n  DomApi,\n  ArrayApi,\n  ObjectApi,\n  StringApi,\n  LoggerApi,\n} from 'yox-type/src/api'\n\nimport {\n  HOOK_BEFORE_CREATE,\n  HOOK_AFTER_CREATE,\n  HOOK_BEFORE_MOUNT,\n  HOOK_AFTER_MOUNT,\n  HOOK_BEFORE_UPDATE,\n  HOOK_AFTER_UPDATE,\n  HOOK_BEFORE_DESTROY,\n  HOOK_AFTER_DESTROY,\n  HOOK_BEFORE_PROPS_UPDATE,\n  NAMESPACE_HOOK,\n  DIRECTIVE_MODEL,\n  MODEL_PROP_DEFAULT,\n  SLOT_DATA_PREFIX,\n  MODIFER_NATIVE,\n} from 'yox-config/src/config'\n\nimport execute from 'yox-common/src/function/execute'\n\nimport Emitter from 'yox-common/src/util/Emitter'\nimport NextTask from 'yox-common/src/util/NextTask'\nimport CustomEvent from 'yox-common/src/util/CustomEvent'\n\nimport * as is from 'yox-common/src/util/is'\nimport * as array from 'yox-common/src/util/array'\nimport * as string from 'yox-common/src/util/string'\nimport * as object from 'yox-common/src/util/object'\nimport * as logger from 'yox-common/src/util/logger'\nimport * as constant from 'yox-common/src/util/constant'\n\nimport * as snabbdom from 'yox-snabbdom/src/snabbdom'\n\nimport * as templateCompiler from 'yox-template-compiler/src/compiler'\nimport * as templateGenerator from 'yox-template-compiler/src/generator'\nimport * as templateRender from 'yox-template-compiler/src/renderer'\n\nimport * as domApi from 'yox-dom/src/dom'\n\nimport Observer from 'yox-observer/src/Observer'\n\nimport * as event from './directive/event'\nimport * as model from './directive/model'\nimport * as binding from './directive/binding'\n\n\nconst globalDirectives = {},\n\nglobalTransitions = {},\n\nglobalComponents = {},\n\nglobalPartials = {},\n\nglobalFilters = {},\n\ncompileCache = {},\n\nTEMPLATE_COMPUTED = '$$',\n\nselectorPattern = /^[#.][-\\w+]+$/\n\nexport default class Yox implements YoxInterface {\n\n  $options: ComponentOptions\n\n  $observer: Observer\n\n  $emitter: Emitter\n\n  $el?: HTMLElement\n\n  $template?: Function\n\n  $refs?: Record<string, YoxInterface | HTMLElement>\n\n  $model?: string\n\n  $root?: YoxInterface\n\n  $parent?: YoxInterface\n\n  $context?: YoxInterface\n\n  $children?: YoxInterface[]\n\n  $vnode: VNode | undefined\n\n  $directives?: Record<string, DirectiveHooks>\n\n  $components?: Record<string, ComponentOptions>\n\n  $transitions?: Record<string, TransitionHooks>\n\n  $partials?: Record<string, Function>\n\n  $filters?: Record<string, Filter>\n\n  /**\n   * core 版本\n   */\n  public static version = process.env.NODE_VERSION\n\n  /**\n   * 方便外部共用的通用逻辑，特别是写插件，减少重复代码\n   */\n  public static is: IsApi = is\n  public static dom: DomApi = domApi\n  public static array: ArrayApi = array\n  public static object: ObjectApi = object\n  public static string: StringApi = string\n  public static logger: LoggerApi = logger\n\n  public static Event = CustomEvent\n  public static Emitter = Emitter\n\n  /**\n   * 定义组件对象\n   */\n  public static define<Computed, Watchers, Events, Methods>(\n    options: ComponentOptions<Computed, Watchers, Events, Methods> & ThisType<Methods & YoxInterface>\n  ) {\n    return options\n  }\n\n\n  /**\n   * 安装插件\n   *\n   * 插件必须暴露 install 方法\n   */\n  public static use(\n    plugin: {\n      install(Y: typeof Yox): void\n    }\n  ): void {\n    plugin.install(Yox)\n  }\n\n  /**\n   * 因为组件采用的是异步更新机制，为了在更新之后进行一些操作，可使用 nextTick\n   */\n  public static nextTick(task: Function, context?: any): void {\n    NextTask.shared().append(task, context)\n  }\n\n  /**\n   * 编译模板，暴露出来是为了打包阶段的模板预编译\n   */\n  public static compile(template: string | Function, stringify?: boolean): string | Function {\n    if (process.env.NODE_ENV !== 'pure' && process.env.NODE_ENV !== 'runtime') {\n      // 需要编译的都是模板源文件，一旦经过预编译，就成了 render 函数\n      if (is.func(template)) {\n        return template as Function\n      }\n      if (!compileCache[template as string]) {\n        const nodes = templateCompiler.compile(template as string)\n        if (process.env.NODE_ENV === 'development') {\n          if (nodes.length !== 1) {\n            logger.fatal(`The \"template\" option should have just one root element.`)\n          }\n        }\n        compileCache[template as string] = templateGenerator.generate(nodes[0])\n      }\n      template = compileCache[template as string]\n      return stringify\n        ? template\n        : new Function(`return ${template}`)()\n    }\n    else {\n      return template\n    }\n  }\n\n  /**\n   * 注册全局指令\n   */\n  public static directive(\n    name: string | Record<string, DirectiveHooks>,\n    directive?: DirectiveHooks\n  ): DirectiveHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !directive) {\n        return getResource(globalDirectives, name as string)\n      }\n      setResource(globalDirectives, name, directive)\n    }\n  }\n\n  /**\n   * 注册全局过渡动画\n   */\n  public static transition(\n    name: string | Record<string, TransitionHooks>,\n    transition?: TransitionHooks\n  ): TransitionHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !transition) {\n        return getResource(globalTransitions, name as string)\n      }\n      setResource(globalTransitions, name, transition)\n    }\n  }\n\n  /**\n   * 注册全局组件\n   */\n  public static component(\n    name: string | Record<string, Component>,\n    component?: Component\n  ): Component | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !component) {\n        return getResource(globalComponents, name as string)\n      }\n      setResource(globalComponents, name, component)\n    }\n  }\n\n  /**\n   * 注册全局子模板\n   */\n  public static partial(\n    name: string | Record<string, Partial>,\n    partial?: Partial\n  ): Function | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !partial) {\n        return getResource(globalPartials, name as string)\n      }\n      setResource(globalPartials, name, partial, Yox.compile)\n    }\n  }\n\n  /**\n   * 注册全局过滤器\n   */\n  public static filter(\n    name: string | Record<string, Filter>,\n    filter?: Filter\n  ): Filter | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !filter) {\n        return getResource(globalFilters, name as string)\n      }\n      setResource(globalFilters, name, filter)\n    }\n  }\n\n  constructor(options?: ComponentOptions) {\n\n    const instance = this, $options: ComponentOptions = options || constant.EMPTY_OBJECT\n\n    // 为了冒泡 HOOK_BEFORE_CREATE 事件，必须第一时间创建 emitter\n    // 监听各种事件\n    // 支持命名空间\n    instance.$emitter = new Emitter(constant.TRUE)\n\n    if ($options.events) {\n      instance.on($options.events)\n    }\n\n    if (process.env.NODE_ENV !== 'pure') {\n\n      // 当前组件的直接父组件\n      if ($options.parent) {\n        instance.$parent = $options.parent\n      }\n\n      // 建立好父子连接后，立即触发钩子\n      execute($options[HOOK_BEFORE_CREATE], instance, $options)\n      // 冒泡 before create 事件\n      instance.fire(HOOK_BEFORE_CREATE + NAMESPACE_HOOK, $options)\n\n    }\n\n    let {\n      data,\n      props,\n      vnode,\n      propTypes,\n      computed,\n      methods,\n      watchers,\n      extensions,\n    } = $options\n\n    instance.$options = $options\n\n    if (extensions) {\n      object.extend(instance, extensions)\n    }\n\n    // 数据源，默认值仅在创建组件时启用\n    const source = props ? object.copy(props) : {}\n    if (process.env.NODE_ENV !== 'pure') {\n      if (propTypes) {\n        object.each(\n          propTypes,\n          function (rule: PropRule, key: string) {\n            let value = source[key]\n            if (process.env.NODE_ENV === 'development') {\n              checkProp(key, value, rule)\n            }\n            if (value === constant.UNDEFINED) {\n              value = rule.value\n              if (value !== constant.UNDEFINED) {\n                source[key] = rule.type === constant.RAW_FUNCTION\n                  ? value\n                  : is.func(value)\n                    ? (value as PropValueFunction)()\n                    : value\n              }\n            }\n          }\n        )\n      }\n    }\n\n    // 先放 props\n    // 当 data 是函数时，可以通过 this.get() 获取到外部数据\n    const observer = instance.$observer = new Observer(source, instance)\n\n    if (computed) {\n      object.each(\n        computed,\n        function (options, keypath) {\n          observer.addComputed(keypath, options)\n        }\n      )\n    }\n\n    // 后放 data\n    if (process.env.NODE_ENV === 'development') {\n      if (vnode && is.object(data)) {\n        logger.warn(`The \"data\" option of child component should be a function which return an object.`)\n      }\n    }\n\n    const extend = is.func(data) ? execute(data, instance, options) : data\n    if (is.object(extend)) {\n      object.each(\n        extend,\n        function (value, key) {\n          if (process.env.NODE_ENV === 'development') {\n            if (object.has(source, key)) {\n              logger.warn(`The data \"${key}\" is already used as a prop.`)\n            }\n          }\n          source[key] = value\n        }\n      )\n    }\n\n    if (methods) {\n      object.each(\n        methods,\n        function (method: Function, name: string) {\n          if (process.env.NODE_ENV === 'development') {\n            if (instance[name]) {\n              logger.fatal(`The method \"${name}\" is conflicted with built-in methods.`)\n            }\n          }\n          instance[name] = method\n        }\n      )\n    }\n\n    if (process.env.NODE_ENV !== 'pure') {\n\n      let placeholder: Node | void = constant.UNDEFINED,\n\n      {\n        el,\n        root,\n        model,\n        context,\n        replace,\n        template,\n        transitions,\n        components,\n        directives,\n        partials,\n        filters,\n        slots,\n      } = $options\n\n      if (model) {\n        instance.$model = model\n      }\n\n      // 把 slots 放进数据里，方便 get\n      if (slots) {\n        object.extend(source, slots)\n      }\n\n      // 检查 template\n      if (is.string(template)) {\n        // 传了选择器，则取对应元素的 html\n        if (selectorPattern.test(template as string)) {\n          placeholder = domApi.find(template as string)\n          if (placeholder) {\n            template = domApi.html(placeholder as Element) as string\n            placeholder = constant.UNDEFINED\n          }\n          else if (process.env.NODE_ENV === 'development') {\n            logger.fatal(`The selector \"${template}\" can't match an element.`)\n          }\n        }\n      }\n\n      // 检查 el\n      if (el) {\n\n        if (is.string(el)) {\n          const selector = el as string\n          if (selectorPattern.test(selector)) {\n            placeholder = domApi.find(selector)\n            if (process.env.NODE_ENV === 'development') {\n              if (!placeholder) {\n                logger.fatal(`The selector \"${selector}\" can't match an element.`)\n              }\n            }\n          }\n          else if (process.env.NODE_ENV === 'development') {\n            logger.fatal(`The \"el\" option should be a selector.`)\n          }\n        }\n        else {\n          placeholder = el as Node\n        }\n\n        if (!replace) {\n          domApi.append(\n            placeholder as Node,\n            placeholder = domApi.createComment(constant.EMPTY_STRING)\n          )\n        }\n\n      }\n\n      // 根组件\n      if (root) {\n        instance.$root = root\n      }\n      // 当前组件是被哪个组件渲染出来的\n      // 因为有 slot 机制，$context 不一定等于 $parent\n      if (context) {\n        instance.$context = context\n      }\n\n      setFlexibleOptions(instance, constant.RAW_TRANSITION, transitions)\n      setFlexibleOptions(instance, constant.RAW_COMPONENT, components)\n      setFlexibleOptions(instance, constant.RAW_DIRECTIVE, directives)\n      setFlexibleOptions(instance, constant.RAW_PARTIAL, partials)\n      setFlexibleOptions(instance, constant.RAW_FILTER, filters)\n\n      // 当存在模板和计算属性时\n      // 因为这里把模板当做一种特殊的计算属性\n      // 因此模板这个计算属性的优先级应该最高\n      if (template) {\n\n        // 拷贝一份，避免影响外部定义的 watchers\n        const newWatchers = watchers\n          ? object.copy(watchers)\n          : {}\n\n        newWatchers[TEMPLATE_COMPUTED] = {\n          // 模板一旦变化，立即刷新\n          sync: constant.TRUE,\n          watcher: function (vnode: VNode) {\n            instance.update(vnode, instance.$vnode as VNode)\n          }\n        }\n\n        // 当模板的依赖变了，则重新创建 virtual dom\n        observer.addComputed(\n          TEMPLATE_COMPUTED,\n          {\n            // 当模板依赖变化时，异步通知模板更新\n            sync: constant.FALSE,\n            get: function () {\n              return instance.render()\n            }\n          }\n        )\n\n        instance.watch(newWatchers)\n\n        if (process.env.NODE_ENV !== 'pure') {\n          execute(instance.$options[HOOK_AFTER_CREATE], instance)\n          instance.fire(HOOK_AFTER_CREATE + NAMESPACE_HOOK)\n        }\n\n        // 编译模板\n        // 在开发阶段，template 是原始的 html 模板\n        // 在产品阶段，template 是编译后的渲染函数\n        // 当然，具体是什么需要外部自己控制\n        instance.$template = is.string(template)\n          ? Yox.compile(template as string) as Function\n          : template as Function\n\n        if (!vnode) {\n\n          if (process.env.NODE_ENV === 'development') {\n            if (!placeholder) {\n              logger.fatal('The \"el\" option is required for root component.')\n            }\n          }\n\n          vnode = snabbdom.create(\n            domApi,\n            placeholder as Node,\n            instance,\n            constant.EMPTY_STRING\n          )\n\n        }\n\n        instance.update(\n          instance.get(TEMPLATE_COMPUTED),\n          vnode\n        )\n\n        return\n\n      }\n      else if (process.env.NODE_ENV === 'development') {\n        if (placeholder || vnode) {\n          logger.fatal('The \"template\" option is required.')\n        }\n      }\n\n    }\n\n    if (watchers) {\n      instance.watch(watchers)\n    }\n\n    if (process.env.NODE_ENV !== 'pure') {\n      execute(instance.$options[HOOK_AFTER_CREATE], instance)\n      instance.fire(HOOK_AFTER_CREATE + NAMESPACE_HOOK)\n    }\n\n  }\n\n  /**\n   * 取值\n   */\n  get(\n    keypath: string,\n    defaultValue?: any\n  ): any {\n    return this.$observer.get(keypath, defaultValue)\n  }\n\n  /**\n   * 设值\n   */\n  set(\n    keypath: string | Data,\n    value?: any\n  ): void {\n    // 组件经常有各种异步改值，为了避免组件销毁后依然调用 set\n    // 这里判断一下，至于其他方法的异步调用就算了，业务自己控制吧\n    const { $observer } = this\n    if ($observer) {\n      $observer.set(keypath, value)\n    }\n  }\n\n  /**\n   * 监听事件，支持链式调用\n   */\n  on(\n    type: string | Record<string, ThisListener<this>>,\n    listener?: ThisListener<this>\n  ): this {\n    addEvents(this, type, listener)\n    return this\n  }\n\n  /**\n   * 监听一次事件，支持链式调用\n   */\n  once(\n    type: string | Record<string, ThisListener<this>>,\n    listener?: ThisListener<this>\n  ): this {\n    addEvents(this, type, listener, constant.TRUE)\n    return this\n  }\n\n  /**\n   * 取消监听事件，支持链式调用\n   */\n  off(\n    type?: string,\n    listener?: Function\n  ): this {\n    this.$emitter.off(type, listener)\n    return this\n  }\n\n  /**\n   * 发射事件\n   */\n  fire(\n    type: string | CustomEvent,\n    data?: Data | boolean,\n    downward?: boolean\n  ): boolean {\n\n    // 外部为了使用方便，fire(type) 或 fire(type, data) 就行了\n    // 内部为了保持格式统一\n    // 需要转成 Event，这样还能知道 target 是哪个组件\n\n    let instance = this,\n\n    { $emitter, $parent, $children } = instance,\n\n    event = type instanceof CustomEvent ? type : new CustomEvent(type),\n\n    args: any[] = [event],\n\n    isComplete: boolean\n\n    // 创建完 CustomEvent，如果没有人为操作\n    // 它的 ns 为 undefined\n    // 这里先解析出命名空间，避免每次 fire 都要解析\n    if (event.ns === constant.UNDEFINED) {\n      const namespace = $emitter.parse(event.type)\n      event.type = namespace.type\n      event.ns = namespace.ns\n    }\n\n    // 告诉外部是谁发出的事件\n    if (!event.target) {\n      event.target = instance\n    }\n\n    // 比如 fire('name', true) 直接向下发事件\n    if (is.object(data)) {\n      array.push(args, data as Data)\n    }\n    else if (data === constant.TRUE) {\n      downward = constant.TRUE\n    }\n\n    // 如果手动 fire 带上了事件命名空间\n    // 则命名空间不能是 native，因为 native 有特殊用处\n    if (process.env.NODE_ENV === 'development') {\n      if (event.ns === MODIFER_NATIVE) {\n        logger.error(`The namespace \"${MODIFER_NATIVE}\" is not permitted.`)\n      }\n    }\n\n    isComplete = $emitter.fire(event, args)\n    if (isComplete) {\n      if (downward) {\n        if ($children) {\n          event.phase = CustomEvent.PHASE_DOWNWARD\n          array.each(\n            $children,\n            function (child) {\n              return isComplete = child.fire(event, data, constant.TRUE)\n            }\n          )\n        }\n      }\n      else if ($parent) {\n        event.phase = CustomEvent.PHASE_UPWARD\n        isComplete = $parent.fire(event, data)\n      }\n    }\n\n    return isComplete\n\n  }\n\n  /**\n   * 监听数据变化，支持链式调用\n   */\n  watch(\n    keypath: string | Record<string, ThisWatcher<this> | ThisWatcherOptions<this>>,\n    watcher?: ThisWatcher<this> | ThisWatcherOptions<this>,\n    immediate?: boolean\n  ): this {\n    this.$observer.watch(keypath, watcher, immediate)\n    return this\n  }\n\n  /**\n   * 取消监听数据变化，支持链式调用\n   */\n  unwatch(\n    keypath?: string,\n    watcher?: ThisWatcher<this>\n  ): this {\n    this.$observer.unwatch(keypath, watcher)\n    return this\n  }\n\n  /**\n   * 加载组件，组件可以是同步或异步，最后会调用 callback\n   *\n   * @param name 组件名称\n   * @param callback 组件加载成功后的回调\n   */\n  loadComponent(name: string, callback: ComponentCallback): void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (!loadComponent(this.$components, name, callback)) {\n        if (process.env.NODE_ENV === 'development') {\n          if (!loadComponent(globalComponents, name, callback)) {\n            logger.error(`The component \"${name}\" is not found.`)\n          }\n        }\n        else {\n          loadComponent(globalComponents, name, callback)\n        }\n      }\n    }\n  }\n\n  /**\n   * 创建子组件\n   *\n   * @param options 组件配置\n   * @param vnode 虚拟节点\n   */\n  createComponent(options: ComponentOptions, vnode: VNode): YoxInterface {\n    if (process.env.NODE_ENV !== 'pure') {\n\n      const instance = this\n\n      options = object.copy(options)\n      options.root = instance.$root || instance\n      options.parent = instance\n      options.context = vnode.context\n      options.vnode = vnode\n      options.replace = constant.TRUE\n\n      let { props, slots, directives } = vnode,\n\n      model = directives && directives[DIRECTIVE_MODEL]\n\n      if (model) {\n        if (!props) {\n          props = {}\n        }\n        const key = options.model || MODEL_PROP_DEFAULT\n        props[key] = model.value\n        options.model = key\n      }\n\n      if (props) {\n        options.props = props\n      }\n\n      if (slots) {\n        options.slots = slots\n      }\n\n      const child = new Yox(options)\n\n      array.push(\n        instance.$children || (instance.$children = []),\n        child\n      )\n\n      const node = child.$el\n      if (node) {\n        vnode.node = node\n      }\n      else if (process.env.NODE_ENV === 'development') {\n        logger.fatal(`The root element of component \"${vnode.tag}\" is not found.`)\n      }\n\n      return child\n    }\n    else {\n      return this\n    }\n  }\n\n  /**\n   * 注册当前组件级别的指令\n   */\n  directive(\n    name: string | Record<string, DirectiveHooks>,\n    directive?: DirectiveHooks\n  ): DirectiveHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $directives } = instance\n      if (is.string(name) && !directive) {\n        return getResource($directives, name as string, Yox.directive)\n      }\n      setResource(\n        $directives || (instance.$directives = {}),\n        name,\n        directive\n      )\n    }\n  }\n\n  /**\n   * 注册当前组件级别的过渡动画\n   */\n  transition(\n    name: string | Record<string, TransitionHooks>,\n    transition?: TransitionHooks\n  ): TransitionHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $transitions } = instance\n      if (is.string(name) && !transition) {\n        return getResource($transitions, name as string, Yox.transition)\n      }\n      setResource(\n        $transitions || (instance.$transitions = {}),\n        name,\n        transition\n      )\n    }\n  }\n\n  /**\n   * 注册当前组件级别的组件\n   */\n  component(\n    name: string | Record<string, Component>,\n    component?: Component\n  ): Component | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $components } = instance\n      if (is.string(name) && !component) {\n        return getResource($components, name as string, Yox.component)\n      }\n      setResource(\n        $components || (instance.$components = {}),\n        name,\n        component\n      )\n    }\n  }\n\n  /**\n   * 注册当前组件级别的子模板\n   */\n  partial(\n    name: string | Record<string, Partial>,\n    partial?: Partial\n  ): Function | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $partials } = instance\n      if (is.string(name) && !partial) {\n        return getResource($partials, name as string, Yox.partial)\n      }\n      setResource(\n        $partials || (instance.$partials = {}),\n        name,\n        partial,\n        Yox.compile\n      )\n    }\n  }\n\n  /**\n   * 注册当前组件级别的过滤器\n   */\n  filter(\n    name: string | Record<string, Filter>,\n    filter?: Filter\n  ): Filter | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $filters } = instance\n      if (is.string(name) && !filter) {\n        return getResource($filters, name as string, Yox.filter)\n      }\n      setResource(\n        $filters || (instance.$filters = {}),\n        name,\n        filter\n      )\n    }\n  }\n\n  /**\n   * 对于某些特殊场景，修改了数据，但是模板的依赖中并没有这一项\n   * 而你非常确定需要更新模板，强制刷新正是你需要的\n   */\n  forceUpdate(props?: Data): void {\n    if (process.env.NODE_ENV !== 'pure') {\n\n      const instance = this,\n\n      { $options, $vnode, $observer } = instance,\n\n      { computed } = $observer\n\n      if ($vnode && computed) {\n\n        const template = computed[TEMPLATE_COMPUTED],\n\n        oldValue = template.get()\n\n        if (props) {\n          execute($options[HOOK_BEFORE_PROPS_UPDATE], instance, props)\n          instance.set(props)\n        }\n\n        // 当前可能正在进行下一轮更新\n        $observer.nextTask.run()\n\n        // 没有更新模板，强制刷新\n        if (!props && oldValue === template.get()) {\n          instance.update(\n            template.get(constant.TRUE),\n            $vnode\n          )\n        }\n      }\n    }\n  }\n\n  /**\n   * 把模板抽象语法树渲染成 virtual dom\n   */\n  render() {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this\n      return templateRender.render(\n        instance,\n        instance.$observer,\n        instance.$template as Function,\n        object.merge(instance.$filters, globalFilters) as Record<string, Function>,\n        object.merge(instance.$partials, globalPartials) as Record<string, Function>,\n        object.merge(instance.$directives, globalDirectives) as Record<string, DirectiveHooks>,\n        object.merge(instance.$transitions, globalTransitions) as Record<string, TransitionHooks>\n      )\n    }\n  }\n\n  /**\n   * 更新 virtual dom\n   *\n   * @param vnode\n   * @param oldVnode\n   */\n  update(vnode: VNode, oldVnode: VNode) {\n    if (process.env.NODE_ENV !== 'pure') {\n      let instance = this,\n\n      { $vnode, $options } = instance,\n\n      afterHook: string\n\n      // 每次渲染重置 refs\n      // 在渲染过程中收集最新的 ref\n      // 这样可避免更新时，新的 ref，在前面创建，老的 ref 却在后面删除的情况\n      instance.$refs = {}\n\n      if ($vnode) {\n        execute($options[HOOK_BEFORE_UPDATE], instance)\n        instance.fire(HOOK_BEFORE_UPDATE + NAMESPACE_HOOK)\n        snabbdom.patch(domApi, vnode, oldVnode)\n        afterHook = HOOK_AFTER_UPDATE\n      }\n      else {\n        execute($options[HOOK_BEFORE_MOUNT], instance)\n        instance.fire(HOOK_BEFORE_MOUNT + NAMESPACE_HOOK)\n        snabbdom.patch(domApi, vnode, oldVnode)\n        instance.$el = vnode.node as HTMLElement\n        afterHook = HOOK_AFTER_MOUNT\n      }\n\n      instance.$vnode = vnode\n\n      // 跟 nextTask 保持一个节奏\n      // 这样可以预留一些优化的余地\n      Yox.nextTick(\n        function () {\n          if (instance.$vnode) {\n            execute($options[afterHook], instance)\n            instance.fire(afterHook + NAMESPACE_HOOK)\n          }\n        }\n      )\n    }\n  }\n\n  /**\n   * 校验组件参数\n   *\n   * @param props\n   */\n  checkProp(key: string, value: any): void {\n    if (process.env.NODE_ENV === 'development') {\n      const { propTypes } = this.$options\n      if (propTypes) {\n        const rule = propTypes[key]\n        if (rule) {\n          checkProp(key, value, rule)\n        }\n      }\n    }\n  }\n\n  /**\n   * 销毁组件\n   */\n  destroy(): void {\n\n    const instance = this,\n\n    { $parent, $options, $emitter, $observer } = instance\n\n    if (process.env.NODE_ENV !== 'pure') {\n\n      execute($options[HOOK_BEFORE_DESTROY], instance)\n      instance.fire(HOOK_BEFORE_DESTROY + NAMESPACE_HOOK)\n\n      const { $vnode } = instance\n\n      if ($parent && $parent.$children) {\n        array.remove($parent.$children, instance)\n      }\n\n      if ($vnode) {\n        // virtual dom 通过判断 parent.$vnode 知道宿主组件是否正在销毁\n        instance.$vnode = constant.UNDEFINED\n        snabbdom.destroy(domApi, $vnode, !$parent)\n      }\n\n    }\n\n    $observer.destroy()\n\n    if (process.env.NODE_ENV !== 'pure') {\n      execute($options[HOOK_AFTER_DESTROY], instance)\n      instance.fire(HOOK_AFTER_DESTROY + NAMESPACE_HOOK)\n    }\n\n    // 发完 after destroy 事件再解绑所有事件\n    $emitter.off()\n\n    object.clear(instance)\n\n  }\n\n  /**\n   * 因为组件采用的是异步更新机制，为了在更新之后进行一些操作，可使用 nextTick\n   */\n  nextTick(task: ThisTask<this>): void {\n    this.$observer.nextTask.append(task, this)\n  }\n\n  /**\n   * 取反 keypath 对应的数据\n   *\n   * 不管 keypath 对应的数据是什么类型，操作后都是布尔型\n   */\n  toggle(keypath: string): boolean {\n    return this.$observer.toggle(keypath)\n  }\n\n  /**\n   * 递增 keypath 对应的数据\n   *\n   * 注意，最好是整型的加法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递增\n   * @param step 步进值，默认是 1\n   * @param max 可以递增到的最大值，默认不限制\n   */\n  increase(keypath: string, step?: number, max?: number): number | void {\n    return this.$observer.increase(keypath, step, max)\n  }\n\n  /**\n   * 递减 keypath 对应的数据\n   *\n   * 注意，最好是整型的减法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递减\n   * @param step 步进值，默认是 1\n   * @param min 可以递减到的最小值，默认不限制\n   */\n  decrease(keypath: string, step?: number, min?: number): number | void {\n    return this.$observer.decrease(keypath, step, min)\n  }\n\n  /**\n   * 在数组指定位置插入元素\n   *\n   * @param keypath\n   * @param item\n   * @param index\n   */\n  insert(keypath: string, item: any, index: number | boolean): true | void {\n    return this.$observer.insert(keypath, item, index)\n  }\n\n  /**\n   * 在数组尾部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  append(keypath: string, item: any): true | void {\n    return this.$observer.append(keypath, item)\n  }\n\n  /**\n   * 在数组首部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  prepend(keypath: string, item: any): true | void {\n    return this.$observer.prepend(keypath, item)\n  }\n\n  /**\n   * 通过索引移除数组中的元素\n   *\n   * @param keypath\n   * @param index\n   */\n  removeAt(keypath: string, index: number): true | void {\n    return this.$observer.removeAt(keypath, index)\n  }\n\n  /**\n   * 直接移除数组中的元素\n   *\n   * @param keypath\n   * @param item\n   */\n  remove(keypath: string, item: any): true | void {\n    return this.$observer.remove(keypath, item)\n  }\n\n  /**\n   * 拷贝任意数据，支持深拷贝\n   *\n   * @param data\n   * @param deep\n   */\n  copy<T>(data: T, deep?: boolean): T {\n    return this.$observer.copy(data, deep)\n  }\n\n}\n\nconst toString = Object.prototype.toString\n\nfunction matchType(value: any, type: string) {\n  return type === 'numeric'\n    ? is.numeric(value)\n    : string.lower(toString.call(value)) === `[object ${type}]`\n}\n\nfunction checkProp(key: string, value: any, rule: PropRule) {\n\n  // 传了数据\n  if (value !== constant.UNDEFINED) {\n\n    const type = rule.type\n\n    // 如果不写 type 或 type 不是 字符串 或 数组\n    // 就当做此规则无效，和没写一样\n    if (type) {\n\n      // 自定义函数判断是否匹配类型\n      // 自己打印警告信息吧\n      if (is.func(type)) {\n        (type as PropTypeFunction)(key, value)\n      }\n      else {\n\n        let matched = constant.FALSE\n\n        // type: 'string'\n        if (!string.falsy(type)) {\n          matched = matchType(value, type as string)\n        }\n        // type: ['string', 'number']\n        else if (!array.falsy(type)) {\n          array.each(\n            type as string[],\n            function (item) {\n              if (matchType(value, item)) {\n                matched = constant.TRUE\n                return constant.FALSE\n              }\n            }\n          )\n        }\n\n        if (!matched) {\n          logger.warn(`The type of prop \"${key}\" expected to be \"${type}\", but is \"${value}\".`)\n        }\n\n      }\n\n    }\n    else {\n      logger.warn(`The prop \"${key}\" in propTypes has no type.`)\n    }\n\n  }\n  // 没传值但此项是必传项\n  else if (rule.required) {\n    logger.warn(`The prop \"${key}\" is marked as required, but its value is not found.`)\n  }\n\n}\n\nfunction setFlexibleOptions(instance: YoxInterface, key: string, value: Function | Data | void) {\n  if (is.func(value)) {\n    instance[key](execute(value, instance))\n  }\n  else if (is.object(value)) {\n    instance[key](value)\n  }\n}\n\nfunction addEvent(instance: YoxInterface, type: string, listener: Function, once?: true) {\n  const options: EmitterOptions = {\n    fn: listener,\n    ctx: instance\n  }\n  if (once) {\n    options.max = 1\n  }\n  // YoxInterface 没有声明 $emitter，因为不想让外部访问，\n  // 但是这里要用一次，所以加了 as any\n  (instance as any).$emitter.on(type, options)\n}\n\nfunction addEvents(\n  instance: YoxInterface,\n  type: string | Record<string, Function>,\n  listener?: Function,\n  once?: true\n) {\n  if (is.string(type)) {\n    addEvent(instance, type as string, listener as Function, once)\n  }\n  else {\n    object.each(\n      type as Data,\n      function (value: Function, key: string) {\n        addEvent(instance, key, value, once)\n      }\n    )\n  }\n}\n\nfunction loadComponent(\n  registry: Record<string, Component | ComponentCallback[]> | void,\n  name: string,\n  callback: ComponentCallback\n): true | void {\n\n  if (registry && registry[name]) {\n\n    const component = registry[name]\n\n    // 注册的是异步加载函数\n    if (is.func(component)) {\n\n      registry[name] = [callback]\n\n      const componentCallback = function (result: ComponentOptions) {\n\n        const queue = registry[name], options = result['default'] || result\n\n        registry[name] = options\n\n        array.each(\n          queue as ComponentCallback[],\n          function (callback) {\n            callback(options)\n          }\n        )\n\n      },\n\n      promise = (component as ComponentLoader)(componentCallback)\n      if (promise) {\n        promise.then(componentCallback)\n      }\n\n    }\n    // 正在加载中\n    else if (is.array(component)) {\n      array.push(\n        component as ComponentCallback[],\n        callback\n      )\n    }\n    // 不是异步加载函数，直接同步返回\n    else {\n      callback(component as ComponentOptions)\n    }\n    return constant.TRUE\n  }\n\n}\n\nfunction getResource(registry: Data | void, name: string, lookup?: Function) {\n  if (registry && registry[name]) {\n    return registry[name]\n  }\n  else if (lookup) {\n    return lookup(name)\n  }\n}\n\nfunction setResource(registry: Data, name: string | Data, value?: any, formatValue?: (value: any) => any) {\n  if (is.string(name)) {\n    registry[name as string] = formatValue ? formatValue(value) : value\n  }\n  else {\n    object.each(\n      name as Data,\n      function (value, key) {\n        registry[key] = formatValue ? formatValue(value) : value\n      }\n    )\n  }\n}\n\nif (process.env.NODE_ENV !== 'pure') {\n  // 全局注册内置指令\n  Yox.directive({ event, model, binding })\n  // 全局注册内置过滤器\n  Yox.filter({\n    hasSlot(name: string): boolean {\n      // 不鼓励在过滤器使用 this\n      // 因此过滤器没有 this 的类型声明\n      // 这个内置过滤器是不得不用 this\n      return (this as YoxInterface).get(SLOT_DATA_PREFIX + name) !== constant.UNDEFINED\n    }\n  })\n}\n"],"names":["constant.RAW_FUNCTION","constant.NULL","is.func","is.array","constant.UNDEFINED","constant.TRUE","constant.MINUS_ONE","constant.FALSE","array","constant.EMPTY_ARRAY","falsy","constant.EMPTY_STRING","is.number","indexOf","has","is.string","constant.RAW_DOT","string.startsWith","each","join","string.has","constant.RAW_WILDCARD","object","array.each","is.object","keypathUtil.each","constant.RAW_UNDEFINED","constant.EMPTY_FUNCTION","constant.WINDOW","constant.GLOBAL","object.copy","array.has","array.push","object.each","string.indexOf","string.slice","nextTick","array.unshift","constant.EMPTY_OBJECT","update","field.COMPONENT","remove","object.merge","field.LOADING","component.update","directive.update","field.ID","object.has","field.VNODE","constant.RAW_COMPONENT","nativeAttr.update","nativeProp.update","directive.remove","field.LEAVING","is.numeric","keypathUtil.join","holder","globalHolder","object.get","array.last","array.pop","array.join","guid","constant.DOCUMENT","array.remove","constant.EVENT_MODEL","constant.EVENT_INPUT","object.set","string.lower","object.falsy","array.falsy","constant.RAW_VALUE","keypathUtil.match","constant.RAW_LENGTH","keypathUtil.matchFuzzy","keypathUtil.isFuzzy","string.codeAt","is.boolean","object.sort","object.clear","array.toArray","constant.EVENT_CHANGE","constant.EVENT_CLICK","constant.EVENT_TAP","domApi.on","domApi.off","array.indexOf","bind","unbind","once","isFuzzy","domApi.prop","domApi.attr","object.extend","extend","domApi.find","domApi.html","domApi.append","domApi.createComment","constant.RAW_TRANSITION","constant.RAW_DIRECTIVE","constant.RAW_PARTIAL","constant.RAW_FILTER","snabbdom.create","templateRender.render","snabbdom.patch","snabbdom.destroy","string"],"mappings":"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"}